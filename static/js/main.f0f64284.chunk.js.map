{"version":3,"sources":["serviceWorker.js","data/tile_data.js","data/warp_data.js","map-components.js","map-logic.js","download-helpers.js","editors/base-editor.js","utilities.js","editors/map-editor.js","editors/layout-editor.js","evaluator-components.js","editors/eval-editor.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","PLANET_TRAITS","TECH_SPECIALTIES","ANOMALIES","WORMHOLES","planet_data","system_data","WARP_DIRECTIONS","warp_configs","NORTH","SOUTHEAST","SOUTH","SOUTHWEST","NORTHEAST","NORTHWEST","getHexSizeFromScreen","innerWidth","SystemBankComponent","int_select","document","getElementById","options","selectedIndex","value","new_value","this","getSelectValue","props","setActiveSystem","systems","getSystemByID","parseInt","e","toggleExpansion","toggleBaseSystems","hexSize","key","system","push","id","getStringName","selected_value","system_to_display","className","active_system","format","system_format","posStyle","onClick","draggable","onDrag","event","onSelectedSystemDrag","onDragEnd","onSystemDragEnd","onDrop","onSystemDropped","eval_variables","onDragOver","preventDefault","type","checked","include_base_systems","onChange","handleBaseCheckboxChange","htmlFor","include_expansion_systems","handleExpansionCheckboxChange","handleSelectChange","disabled","selectNoSystems","React","Component","MapComponent","system_box","setState","Object","assign","updateDimensions","addEventListener","bind","removeEventListener","home_stats","map","getHomeSystemStats","cw","ch","spaces","length","mapHeight","hexSpace","mapWidth","mapCenterH","mapCenterV","display","index","space","is_draggable","MAP_SPACE_TYPES","SYSTEM","systems_draggable","isMecatolRexSystem","home_value","these_stats","HOME","home_values","toString","stat_container","getObjFromCoord","stats","clickedSpace","onSystemDrag","entries","mapStyle","map_class","style","HexComponent","onDragStart","outlined","hexClass","points","svgElements","children","MapSpaceComponent","spaceOffsetV","spaceOffsetH","x","y","z","getPositionStyle","OPEN","home_text","CLOSED","WARP","warps","warp_spaces","WarpComponent","coords","warp_lines","one_warp","start_coords","get_endpoint_coords","end_coords","x1","y1","x2","y2","SYSTEM_FORMATS","SystemComponent","id_div","extras","value_div","planets","evaluate","wormhole","anomaly","rex_class","hex_props","isLegendary","ID_ONLY","STREAMLINED_WITH_NAME","planet","name","PLANET_FORMATS","STREAMLINED","COLORBLIND_FRIENDLY","COLORBLIND_FRIENDLY_WITH_NAME","PlanetComponent","trait_class","trait_abbr","trait","tech_class","tech_abbr","tech_specialty","legendary_class","name_stuff","values","resources","influence","PLANET_EVAL_STRATEGIES","Planet","obj_data","variables","v","data","BASE_PLANET_MOD","r","RESOURCES_MULTIPLIER","i","INFLUENCE_MULTIPLIER","t","TECH_MOD","TECH_WARFARE_MOD","TECH_PROPULSION_MOD","TECH_BIOTIC_MOD","TECH_CYBERNETIC_MOD","PLANET_STRATEGY","GREATEST","to_add","AVERAGE","high_one","NONZERO_RESOURCES_MOD","NONZERO_INFLUENCE_MOD","TRAIT_CULTURAL_MOD","TRAIT_HAZARDOUS_MOD","TRAIT_INDUSTRIAL_MOD","PlanetBox","one_planet_data","one_planet","System","planet_box","planet_name","plToAdd","getPlanetByName","SINGLE_PLANET_MOD","MULTI_PLANET_MOD","MATCHING_PLANETS_MOD","NONMATCHING_PLANETS_MOD","MECATOL_REX_SYS_MOD","LEGENDARY_PLANET_SYS_MOD","DISTANCE_MOD_BASE","isBlue","DISTANCE_MOD_PLANET","DISTANCE_MOD_PLANET_WORMHOLE","DISTANCE_MOD_EMPTY_WORMHOLE","DISTANCE_MOD_EMPTY","DISTANCE_MOD_ASTEROID_FIELD","DISTANCE_MOD_GRAVITY_RIFT","DISTANCE_MOD_NEBULA","DISTANCE_MOD_SUPERNOVA","isRed","name_array","tech","join","SystemBox","one_system_data","total","splice","sysindex","getSystemIndexByID","new_system_box","one_system","systems_to_return","one_sys","getDistanceMultiplier","modded_distance","d","DISTANCE_MULTIPLIER","Map","load_default","starting_space","iterations","addAdjacentSpaces","new_map","one_space","new_space","MapSpace","system_id","getSpaceBySystemID","space_a","space_b","max","checked_spaces","new_to_check_adj","areCoordsInList","new_new_check","new_adj","getAdjacentSpacesIncludingWormholes","one_adj","nonhomes","home","slice","best","winner","dis","findSpaceDistance","final_stats","one_stat","techs","split","sort","ind","cul","haz","one_warp_dir","doesWarpDirectionConnect","warp_direction","spaceItGoes","getWarpDirectionCoordinates","oppositeDirection","directions_to_check","one_next_warp","one_direction","filter","is_legal","map_space","getAdjacentSystems","coords1","coords2","home_total","spaces_to_get_to","Math","abs","shortest_distance","_getShortestModdedDistance","start_space","dest_space","finished_paths","act_paths","first_steps","getAdjacentSystemsIncludingWormholes","one_step","getDistanceModifier","getMapDistanceModifier","new_path","new_active_paths","one_path","results","_extendPath","finished","one_done","ongoing","one_ongoing","first_yet","shortest","path_length","_calculateModdedDistanceFromRaw","path","completed_paths","ongoing_paths","last_step","next_steps","path_copy","modded_dist","one_index","adj_spaces","DISTANCE_MOD_ADJACENT_TO_OPPONENT","coords_to_add","adjacent_coords","getAdjacentCoordinates","one_adjacent_coords","one_coords_to_add","system_space","warp_space","adj_systems","direction_from","warps_to_follow","one_warp_direction","next_space","farther_systems","_getAdjacentSpacesThroughWarps","one_far_sys","getAdjacentSpaces","adj_coords","potential_space","potential_systems","one_system_space","wh_systems","getMatchingWormholeSpaces","one_whs","matching_spaces","list","existing_coords","JSONDownloadButton","string","downloadInfo","getDownloadInfo","filename","text","element","createElement","setAttribute","encodeURIComponent","body","appendChild","click","removeChild","download","replace","toLowerCase","JSON","stringify","downloadJSON","title","JSONUploadButton","fr","FileReader","readAsText","files","onload","oFREvent","handleJSON","parse","target","result","handleUpload","jQuery","$","BaseEditor","default_layouts","ls","get","storage_key","getNewStringValue","message","setNoMessage","sendStateBeforeDeath","one_space_data","space_system","spaces_data","space_data","l_title","val","getJSONDataFromSpaces","getCurrentLayoutJSON","subject_plural","selected_item","getLayoutFromJSON","loadedTitle","new_message","subject","setMap","saved_data","dataToSave","set","setLayout","currentIndex","new_selected","toDel","getNewLayout","remove","syncBankSystems","compareByID","a","b","MapEditor","starting_layout","selected_bank_system","draggedSystem","option_pair_wormholes","option_include_all_wormholes","target_blue_total","bank_systems","eval_option","default_variables","balance_difference","map_string","balance_options","long_op","state_to_import","matching_options","getOptions","option","matching_evals","getEvalOptions","eval_var","isComplete","getHomeValues","getBalanceDifference","getMapString","containsSystem","new_check","getSelectNewMapValue","getSelectNewMapType","loadCustomLayout","loadDefault","valIndex","e_kind","e_index","e_var","eval_storage_key","substr","space_index","makeCopy","is_changed","old_space","replaced_system","isChecked","int_value","toLoad","layout_storage_key","final_string","is_first","coord_order","map_string_order","one_coor","new_bank","id_list","coord_list","one_id_string","one_id","newState","isChanged","replacement_system","setTimeout","autoComplete","map_history","gotamap","_autoCompleteSteps","current_history","steps_forward","current_try_total","backwards_length","starting_length","tries","new_history","_addOneSystem","steps_forward_add","pop","newest_history","avail_sys_pool","can_add","getWormholeSystems","getOpenSpacesTotal","total_needed","b_holes","a_holes","target_ratio","getPossibleSystemTotal","current_ratio","getBlueSystemTotal","getRedSystemTotal","replacement_pool","chosen_system","floor","random","avail_space_pool","chosen_space_index","new_box","isLegal","evars","getHomeValue","min","one_home_key","hasOwnProperty","which_option","improveBalance","Promise","resolve","eligible_system_spaces","dont_move_wormholes","dont_move_anomalies","dont_move_empty","j","shuffle","found_it","new_hv","new_diff","one_default","evals","one_saved","one_custom_l","areWarpsLogical","is_complete","opt","eval_options","auto_complete_ratios","red_total","blue_total","open_spaces","blue_avail","red_avail","s","bal_diff","getAllLayoutJSONFileInfo","deleteAll","addLayoutsFromJSON","input_title","saveCurrent","deleteCurrent","isSelectNew","getCurrentLayoutJSONFileInfo","handleFormatDisplayChange","loadMapFromString","getMessageHtml","handleIncludeWormholesChange","handlePairWormholesChange","handleTargetRatioChange","autoCompleteStart","getTotalOpen","handleEvalChange","handleBalanceOptionChange","improveBalanceStart","setActiveBankSystem","getTotalResources","getTotalInfluence","getTotalTechSpecialties","getPlanetTraitTotals","LayoutEditor","show_warps","show_wormholes","show_anomalies","setNewLayout","what","go_next_type","_getNextWarp","_getNextSystem","keep_going","proposed_warp","proposed_config","one_coord","eligible_systems","current_id","defaults","handleWarpChange","handleWormholeChange","handleAnomaliesChange","EVAL_ASPECTS","EvaluatorLine","null_box","nul_val","num_value","hasNullBox","onNullChange","label","m","onInputChange","helperText","EvaluatorForm","which_aspect","distance","changeHandler","reportChange","SUM","GREATEST_PLUS_TECH","reportNullChange","EvaluationEditor","default_evaluators","new_values","setValuesFull","new_eval","setValues","SCREENS","MapLabNavigator","MAP_EDITOR","map_state","layout_state","eval_state","which_screen","SYSTEM_EVALUATOR","LAYOUT_EDITOR","new_screen","screen_return","active_screen","state_to_store","storeState","INSTRUCTIONS","role","aria-label","aria-expanded","toggleClass","aria-hidden","changeScreen","ReactDOM","render","URL","process","href","origin","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f0f64284.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const PLANET_TRAITS = {\n    \"HAZARDOUS\": 0,\n    \"INDUSTRIAL\": 1,\n    \"CULTURAL\": 2,\n};\n\nexport const TECH_SPECIALTIES = {\n    \"BIOTIC\": 0,\n    \"WARFARE\": 1,\n    \"PROPULSION\": 2,\n    \"CYBERNETIC\": 3,\n};\n\nexport const ANOMALIES = {\n    \"NEBULA\": 0,\n    \"GRAVITY_RIFT\": 1,\n    \"ASTEROID_FIELD\": 2,\n    \"SUPERNOVA\": 3,\n};\n\nexport const WORMHOLES = {\n    \"ALPHA\": 0,\n    \"BETA\": 1,\n    \"DELTA\": 2,\n};\n\nexport let planet_data = [\n    {\n        \"name\": \"Mecatol Rex\",\n        \"trait\": null,\n        \"tech_specialty\": null,\n        \"resources\": 1,\n        \"influence\": 6,\n    },\n    {\n        \"name\": \"Abyz\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 3,\n        \"influence\": 0,\n    },\n    {\n        \"name\": \"Fria\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 0,\n    },\n    {\n        \"name\": \"Arinam\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": null,\n        \"resources\": 1,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Meer\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": TECH_SPECIALTIES.WARFARE,\n        \"resources\": 0,\n        \"influence\": 4,\n    },\n    {\n        \"name\": \"Arnor\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": null,\n        \"resources\": 1,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Lor\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Bereg\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 3,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Lirta IV\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 3,\n    },\n    {\n        \"name\": \"Centauri\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 1,\n        \"influence\": 3,\n    },\n    {\n        \"name\": \"Gral\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": TECH_SPECIALTIES.PROPULSION,\n        \"resources\": 1,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Corneeq\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 1,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Resculon\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 0,\n    },\n    {\n        \"name\": \"Dal Bootha\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 0,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Xxehan\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 1,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Lazar\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": TECH_SPECIALTIES.CYBERNETIC,\n        \"resources\": 1,\n        \"influence\": 0,\n    },\n    {\n        \"name\": \"Sakulag\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Lodor\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 3,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Mehar Xull\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": TECH_SPECIALTIES.WARFARE,\n        \"resources\": 1,\n        \"influence\": 3,\n    },\n    {\n        \"name\": \"Mellon\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 0,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Zohbat\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 3,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"New Albion\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": TECH_SPECIALTIES.BIOTIC,\n        \"resources\": 1,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Starpoint\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 3,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Quann\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Qucen'n\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": null,\n        \"resources\": 1,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Rarron\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 0,\n        \"influence\": 3,\n    },\n    {\n        \"name\": \"Saudor\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Tar'Mann\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": TECH_SPECIALTIES.BIOTIC,\n        \"resources\": 1,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Tequ'ran\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 0,\n    },\n    {\n        \"name\": \"Torkan\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 0,\n        \"influence\": 3,\n    },\n    {\n        \"name\": \"Thibah\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": TECH_SPECIALTIES.PROPULSION,\n        \"resources\": 1,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Vefut II\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Wellon\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": TECH_SPECIALTIES.CYBERNETIC,\n        \"resources\": 1,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Archon Vail\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": TECH_SPECIALTIES.PROPULSION,\n        \"resources\": 1,\n        \"influence\": 3,\n    },\n    {\n        \"name\": \"Perimeter\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Ang\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": TECH_SPECIALTIES.WARFARE,\n        \"resources\": 2,\n        \"influence\": 0,\n    },\n    {\n        \"name\": \"Sem-Lore\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": TECH_SPECIALTIES.CYBERNETIC,\n        \"resources\": 3,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Vorhal\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": TECH_SPECIALTIES.BIOTIC,\n        \"resources\": 0,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Atlas\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 3,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Primor\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Hope's End\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 3,\n        \"influence\": 0,\n    },\n    {\n        \"name\": \"Cormund\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 0,\n    },\n    {\n        \"name\": \"Everra\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 3,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Accoen\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 3,\n    },\n    {\n        \"name\": \"Joel Ir\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 3,\n    },\n    {\n        \"name\": \"Kraag\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Siig\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 0,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Alio Prima\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 1,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Ba'kal\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": null,\n        \"resources\": 3,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Lisis\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Velnor\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": TECH_SPECIALTIES.WARFARE,\n        \"resources\": 2,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Cealdri\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": TECH_SPECIALTIES.CYBERNETIC,\n        \"resources\": 0,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Xanhact\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 0,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Vega Major\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Vega Minor\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": TECH_SPECIALTIES.PROPULSION,\n        \"resources\": 1,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Abaddon\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 1,\n        \"influence\": 0,\n    },\n    {\n        \"name\": \"Ashtroth\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 0,\n    },\n    {\n        \"name\": \"Loki\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 1,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Rigel I\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 0,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Rigel II\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": null,\n        \"resources\": 1,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Rigel III\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": TECH_SPECIALTIES.BIOTIC,\n        \"resources\": 1,\n        \"influence\": 1,\n    },\n\n\n];\n\nexport let system_data = [\n    {\n        \"id\": 18,\n        \"planets\": [\"Mecatol Rex\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 39,\n        \"planets\": [],\n        \"anomaly\": null,\n        \"wormhole\": WORMHOLES.ALPHA\n    },\n    {\n        \"id\": 43,\n        \"planets\": [],\n        \"anomaly\": ANOMALIES.SUPERNOVA,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 46,\n        \"planets\": [],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 49,\n        \"planets\": [],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 44,\n        \"planets\": [],\n        \"anomaly\": ANOMALIES.ASTEROID_FIELD,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 40,\n        \"planets\": [],\n        \"anomaly\": null,\n        \"wormhole\": WORMHOLES.BETA\n    },\n    {\n        \"id\": 48,\n        \"planets\": [],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 45,\n        \"planets\": [],\n        \"anomaly\": ANOMALIES.ASTEROID_FIELD,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 47,\n        \"planets\": [],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 42,\n        \"planets\": [],\n        \"anomaly\": ANOMALIES.NEBULA,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 50,\n        \"planets\": [],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 41,\n        \"planets\": [],\n        \"anomaly\": ANOMALIES.GRAVITY_RIFT,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 32,\n        \"planets\": [\"Dal Bootha\", \"Xxehan\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 26,\n        \"planets\": [\"Lodor\"],\n        \"anomaly\": null,\n        \"wormhole\": WORMHOLES.ALPHA\n    },\n    {\n        \"id\": 29,\n        \"planets\": [\"Qucen'n\", \"Rarron\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 38,\n        \"planets\": [\"Abyz\", \"Fria\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 22,\n        \"planets\": [\"Tar'Mann\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 21,\n        \"planets\": [\"Thibah\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 33,\n        \"planets\": [\"Corneeq\", \"Resculon\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 19,\n        \"planets\": [\"Wellon\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 28,\n        \"planets\": [\"Tequ'ran\", \"Torkan\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 24,\n        \"planets\": [\"Mehar Xull\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 37,\n        \"planets\": [\"Arinam\", \"Meer\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 30,\n        \"planets\": [\"Mellon\", \"Zohbat\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 20,\n        \"planets\": [\"Vefut II\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 27,\n        \"planets\": [\"New Albion\", \"Starpoint\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 23,\n        \"planets\": [\"Saudor\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 31,\n        \"planets\": [\"Lazar\", \"Sakulag\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 35,\n        \"planets\": [\"Bereg\", \"Lirta IV\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 34,\n        \"planets\": [\"Centauri\", \"Gral\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 36,\n        \"planets\": [\"Arnor\", \"Lor\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 25,\n        \"planets\": [\"Quann\"],\n        \"anomaly\": null,\n        \"wormhole\": WORMHOLES.BETA\n    },\n    {\n        \"id\": 59,\n        \"planets\": [\"Archon Vail\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 60,\n        \"planets\": [\"Perimeter\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 61,\n        \"planets\": [\"Ang\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 62,\n        \"planets\": [\"Sem-Lore\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 63,\n        \"planets\": [\"Vorhal\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 64,\n        \"planets\": [\"Atlas\"],\n        \"anomaly\": null,\n        \"wormhole\": WORMHOLES.BETA\n    },\n    {\n        \"id\": 65,\n        \"planets\": [\"Primor\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 66,\n        \"planets\": [\"Hope's End\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 67,\n        \"planets\": [\"Cormund\"],\n        \"anomaly\": ANOMALIES.GRAVITY_RIFT,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 68,\n        \"planets\": [\"Everra\"],\n        \"anomaly\": ANOMALIES.NEBULA,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 69,\n        \"planets\": [\"Accoen\", \"Joel Ir\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 70,\n        \"planets\": [\"Kraag\", \"Siig\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 71,\n        \"planets\": [\"Alio Prima\", \"Ba'kal\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 72,\n        \"planets\": [\"Lisis\", \"Velnor\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 73,\n        \"planets\": [\"Cealdri\", \"Xanhact\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 74,\n        \"planets\": [\"Vega Major\", \"Vega Minor\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 75,\n        \"planets\": [\"Abaddon\", \"Ashtroth\", \"Loki\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 76,\n        \"planets\": [\"Rigel I\", \"Rigel II\", \"Rigel III\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 77,\n        \"planets\": [],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 78,\n        \"planets\": [],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 79,\n        \"planets\": [],\n        \"anomaly\": ANOMALIES.ASTEROID_FIELD,\n        \"wormhole\": WORMHOLES.ALPHA\n    },\n    {\n        \"id\": 80,\n        \"planets\": [],\n        \"anomaly\": ANOMALIES.SUPERNOVA,\n        \"wormhole\": null\n    },\n\n\n];\n","export const WARP_DIRECTIONS = {\n    \"NORTH\": {\"x\": 0, \"y\": 1, \"z\": -1},\n    \"NORTHEAST\": {\"x\": 1, \"y\": 0, \"z\": -1},\n    \"SOUTHEAST\": {\"x\": 1, \"y\": -1, \"z\": 0},\n    \"SOUTH\": {\"x\": 0, \"y\": -1, \"z\": 1},\n    \"SOUTHWEST\": {\"x\": -1, \"y\": 0, \"z\": 1},\n    \"NORTHWEST\": {\"x\": -1, \"y\": 1, \"z\": 0},\n};\n\nexport let warp_configs = [\n    [\n        [WARP_DIRECTIONS.NORTH, WARP_DIRECTIONS.SOUTHEAST],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTH, WARP_DIRECTIONS.SOUTH],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTH, WARP_DIRECTIONS.SOUTHWEST],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTHEAST, WARP_DIRECTIONS.SOUTH],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTHEAST, WARP_DIRECTIONS.SOUTHWEST],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTHEAST, WARP_DIRECTIONS.NORTHWEST],\n    ],\n    [\n        [WARP_DIRECTIONS.SOUTHEAST, WARP_DIRECTIONS.SOUTHWEST],\n    ],\n    [\n        [WARP_DIRECTIONS.SOUTHEAST, WARP_DIRECTIONS.NORTHWEST],\n    ],\n    [\n        [WARP_DIRECTIONS.SOUTH, WARP_DIRECTIONS.NORTHWEST],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTH, WARP_DIRECTIONS.SOUTHEAST],\n        [WARP_DIRECTIONS.NORTH, WARP_DIRECTIONS.SOUTH],\n        [WARP_DIRECTIONS.NORTH, WARP_DIRECTIONS.SOUTHWEST],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTHEAST, WARP_DIRECTIONS.NORTHWEST],\n        [WARP_DIRECTIONS.NORTHEAST, WARP_DIRECTIONS.SOUTH],\n        [WARP_DIRECTIONS.NORTHEAST, WARP_DIRECTIONS.SOUTHWEST],\n    ],\n    [\n        [WARP_DIRECTIONS.SOUTHEAST, WARP_DIRECTIONS.NORTH],\n        [WARP_DIRECTIONS.SOUTHEAST, WARP_DIRECTIONS.NORTHWEST],\n        [WARP_DIRECTIONS.SOUTHEAST, WARP_DIRECTIONS.SOUTHWEST],\n    ],\n    [\n        [WARP_DIRECTIONS.SOUTH, WARP_DIRECTIONS.NORTH],\n        [WARP_DIRECTIONS.SOUTH, WARP_DIRECTIONS.NORTHWEST],\n        [WARP_DIRECTIONS.SOUTH, WARP_DIRECTIONS.NORTHEAST],\n    ],\n    [\n        [WARP_DIRECTIONS.SOUTHWEST, WARP_DIRECTIONS.NORTH],\n        [WARP_DIRECTIONS.SOUTHWEST, WARP_DIRECTIONS.NORTHEAST],\n        [WARP_DIRECTIONS.SOUTHWEST, WARP_DIRECTIONS.SOUTHEAST],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTHWEST, WARP_DIRECTIONS.SOUTHEAST],\n        [WARP_DIRECTIONS.NORTHWEST, WARP_DIRECTIONS.SOUTH],\n        [WARP_DIRECTIONS.NORTHWEST, WARP_DIRECTIONS.NORTHEAST],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTHWEST, WARP_DIRECTIONS.SOUTH],\n        [WARP_DIRECTIONS.NORTH, WARP_DIRECTIONS.SOUTH],\n        [WARP_DIRECTIONS.NORTH, WARP_DIRECTIONS.SOUTHEAST],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTH, WARP_DIRECTIONS.SOUTHWEST],\n        [WARP_DIRECTIONS.NORTHEAST, WARP_DIRECTIONS.SOUTHWEST],\n        [WARP_DIRECTIONS.NORTHEAST, WARP_DIRECTIONS.SOUTH],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTHEAST, WARP_DIRECTIONS.NORTHWEST],\n        [WARP_DIRECTIONS.SOUTHEAST, WARP_DIRECTIONS.NORTHWEST],\n        [WARP_DIRECTIONS.SOUTHEAST, WARP_DIRECTIONS.SOUTHWEST],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTH, WARP_DIRECTIONS.SOUTH],\n        [WARP_DIRECTIONS.SOUTH, WARP_DIRECTIONS.NORTHEAST],\n        [WARP_DIRECTIONS.SOUTHWEST, WARP_DIRECTIONS.NORTH],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTHEAST, WARP_DIRECTIONS.SOUTHWEST],\n        [WARP_DIRECTIONS.SOUTHWEST, WARP_DIRECTIONS.SOUTHEAST],\n        [WARP_DIRECTIONS.NORTHWEST, WARP_DIRECTIONS.NORTHEAST],\n    ],\n    [\n        [WARP_DIRECTIONS.SOUTHEAST, WARP_DIRECTIONS.NORTHWEST],\n        [WARP_DIRECTIONS.NORTHWEST, WARP_DIRECTIONS.SOUTH],\n        [WARP_DIRECTIONS.NORTH, WARP_DIRECTIONS.SOUTHEAST],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTH, WARP_DIRECTIONS.SOUTH],\n        [WARP_DIRECTIONS.NORTH, WARP_DIRECTIONS.SOUTHWEST],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTHEAST, WARP_DIRECTIONS.SOUTHWEST],\n        [WARP_DIRECTIONS.NORTHEAST, WARP_DIRECTIONS.NORTHWEST],\n    ],\n    [\n        [WARP_DIRECTIONS.SOUTHEAST, WARP_DIRECTIONS.NORTHWEST],\n        [WARP_DIRECTIONS.SOUTHEAST, WARP_DIRECTIONS.NORTH],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTH, WARP_DIRECTIONS.SOUTH],\n        [WARP_DIRECTIONS.SOUTH, WARP_DIRECTIONS.NORTHEAST],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTHEAST, WARP_DIRECTIONS.SOUTHWEST],\n        [WARP_DIRECTIONS.SOUTHWEST, WARP_DIRECTIONS.SOUTHEAST],\n    ],\n    [\n        [WARP_DIRECTIONS.SOUTHEAST, WARP_DIRECTIONS.NORTHWEST],\n        [WARP_DIRECTIONS.NORTHWEST, WARP_DIRECTIONS.SOUTH],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTH, WARP_DIRECTIONS.SOUTH],\n        [WARP_DIRECTIONS.NORTH, WARP_DIRECTIONS.SOUTHEAST],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTHEAST, WARP_DIRECTIONS.SOUTHWEST],\n        [WARP_DIRECTIONS.NORTHEAST, WARP_DIRECTIONS.SOUTH],\n    ],\n    [\n        [WARP_DIRECTIONS.SOUTHEAST, WARP_DIRECTIONS.NORTHWEST],\n        [WARP_DIRECTIONS.SOUTHEAST, WARP_DIRECTIONS.SOUTHWEST],\n    ],\n    [\n        [WARP_DIRECTIONS.SOUTH, WARP_DIRECTIONS.NORTH],\n        [WARP_DIRECTIONS.SOUTH, WARP_DIRECTIONS.NORTHWEST],\n    ],\n    [\n        [WARP_DIRECTIONS.SOUTHWEST, WARP_DIRECTIONS.NORTHEAST],\n        [WARP_DIRECTIONS.SOUTHWEST, WARP_DIRECTIONS.NORTH],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTHWEST, WARP_DIRECTIONS.SOUTHEAST],\n        [WARP_DIRECTIONS.NORTHWEST, WARP_DIRECTIONS.NORTHEAST],\n    ],\n];\n","import React from 'react';\nimport {ANOMALIES, PLANET_TRAITS, TECH_SPECIALTIES, WORMHOLES} from \"./data/tile_data\";\nimport {warp_configs, WARP_DIRECTIONS} from \"./data/warp_data\";\nimport {getObjFromCoord} from './map-logic';\n\nconst hexSpace = 6;\n\nfunction getHexSizeFromScreen() {\n    if(window.innerWidth >= 1024) {\n        return 110;\n    } else if(window.innerWidth >= 769) {\n        return 80;\n    } else {\n        return 55;\n    }\n}\n\nexport class SystemBankComponent extends React.Component {\n\n    getSelectValue() {\n        let int_select = document.getElementById(\"system-bank-select\");\n        return int_select.options[int_select.selectedIndex].value;\n    }\n\n    handleSelectChange() {\n        let new_value = this.getSelectValue();\n        if(new_value === \"none\") {\n            this.props.setActiveSystem(null);\n        } else {\n            this.props.setActiveSystem(\n                this.props.systems.getSystemByID(parseInt(new_value))\n            );\n        }\n    }\n\n    handleExpansionCheckboxChange(e) {\n        this.props.toggleExpansion();\n    }\n    handleBaseCheckboxChange(e) {\n        this.props.toggleBaseSystems();\n    }\n\n    selectNoSystems() {\n        this.props.setActiveSystem(null);\n    }\n\n    render() {\n        let hexSize = getHexSizeFromScreen();\n\n        let options = [(<option value=\"none\" key=\"sys_none\">(none)</option>)];\n        for(let system of this.props.systems.systems) {\n            options.push(<option\n                value={system.id} key={\"sys_\"+system.id}\n            >{system.getStringName()}</option>)\n        }\n\n        let selected_value = \"none\";\n        let system_to_display = (<span className=\"hex-container\"></span>);\n        if(this.props.active_system!==null) {\n            selected_value = this.props.active_system.id;\n            system_to_display = (\n                <SystemComponent\n                    system={this.props.active_system}\n                    format={this.props.system_format}\n                    posStyle={{\"position\": \"relative\"}}\n                    onClick={()=>{}}\n                    hexSize={hexSize}\n                    draggable={true}\n                    onDrag={(event)=>this.props.onSelectedSystemDrag(event)}\n                    onDragEnd={(event)=>this.props.onSystemDragEnd(event)}\n                    onDrop={(event)=>this.props.onSystemDropped(event)}\n                    eval_variables={this.props.eval_variables}\n                />\n            );\n        }\n\n        return(\n                <div\n                    className=\"system-bank field\"\n                    onDragOver={(event)=>{event.preventDefault();}}\n                    onDrop={(event)=>this.props.onSystemDropped(event)}\n                >\n                    <label className=\"label\">\n                        System Bank\n                    </label>\n\t\t            <p className=\"control\">\n\t\t                <input\n\t\t                    id=\"include-base-systems\"\n\t\t                    type=\"checkbox\"\n\t\t                    checked={this.props.include_base_systems}\n\t\t                    onChange={(e)=>this.handleBaseCheckboxChange(e)}\n\t\t                />\n\t\t                <label htmlFor=\"include-base-systems\"> Base Systems</label>\n\t\t            </p>\n                    <p className=\"control\">\n                        <input\n                            id=\"include-expansion-systems\"\n                            type=\"checkbox\"\n                            checked={this.props.include_expansion_systems}\n                            onChange={(e)=>this.handleExpansionCheckboxChange(e)}\n                        />\n                        <label htmlFor=\"include-expansion-systems\"> Expansion Systems</label>\n                    </p>\n                    <p className=\"control\">\n                        <span className=\"select is-small\">\n                            <select\n                                id=\"system-bank-select\"\n                                value={selected_value}\n                                onChange={()=>this.handleSelectChange()}\n                            >\n                                {options}\n                            </select>\n                        </span>\n                    </p>\n                    <p className=\"control\">\n                        <button\n                            disabled={this.props.active_system===null}\n                            onClick={()=>this.selectNoSystems()}\n                            className=\"button is-small\"\n                        >\n                            Select None\n                        </button>\n                    </p>\n                    <div className=\"control\">\n                        {system_to_display}\n                    </div>\n                </div>\n        );\n    }\n}\n\nexport class MapComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"system_format\": this.props.system_format,\n            \"hexSize\": getHexSizeFromScreen(),\n        };\n        this.system_box = this.props.system_box;\n    }\n\n    updateDimensions() {\n        this.setState(Object.assign({}, this.state, {\"hexSize\": getHexSizeFromScreen()}));\n    }\n\n    componentDidMount() {\n        this.updateDimensions();\n        window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateDimensions.bind(this));\n    }\n\n\n    render() {\n\t\tlet home_stats = this.props.map.getHomeSystemStats();\n        let hexSize = this.state.hexSize;\n        let cw = 5.5;\n        let ch = 7;\n        if(this.props.map.spaces.length>37) {\n            cw = 7;\n            ch = 9;\n        }\n        let mapHeight = hexSize*.866*ch + hexSpace*6;\n        let mapWidth = hexSize*cw + hexSpace*6;\n        let mapCenterH = mapWidth/2;\n        let mapCenterV = mapHeight/2;\n        let display=[];\n        for(let [index, space] of this.props.map.spaces.entries()) {\n            let is_draggable=false;\n            if(space.type===MAP_SPACE_TYPES.SYSTEM && this.props.systems_draggable) {\n                if(!space.system.isMecatolRexSystem()) is_draggable=true;\n            }\n            let home_value = null;\n\t\t\tlet these_stats = null;\n            if(\n                space.type===MAP_SPACE_TYPES.HOME\n                &&\n                this.props.home_values !== null\n                &&\n                (this.props.home_values && index.toString() in this.props.home_values)\n            ) {\n                home_value = this.props.home_values[index.toString()];\n            }\n\t\t\tif(space.type===MAP_SPACE_TYPES.HOME) {\n\t\t\t\tlet stat_container = getObjFromCoord(space, home_stats);\n\t\t\t\tif(stat_container) these_stats = stat_container.stats;\n\t\t\t}\n            display.push(\n                <MapSpaceComponent\n                    space={space}\n                    key={\"map_space_\"+index}\n                    system_format={this.props.system_format}\n                    onClick={()=>this.props.clickedSpace(index)}\n                    hexSize={hexSize}\n                    mapCenterH={mapCenterH}\n                    mapCenterV={mapCenterV}\n                    draggable={is_draggable}\n                    onDrag={(event)=>this.props.onSystemDrag(event, space.system)}\n                    onDragEnd={(event)=>this.props.onSystemDragEnd(event)}\n                    onDrop={(event)=>{if(this.props.systems_draggable) this.props.onSystemDropped(event, index);}}\n                    eval_variables={this.props.eval_variables}\n                    home_value={home_value}\n\t\t\t\t\thome_stats={these_stats}\n                />\n            );\n        }\n\n        let mapStyle = {\n            \"width\": mapWidth+\"px\",\n            \"height\": mapHeight+\"px\",\n        };\n        return (\n            <div className={\"map \"+this.props.map_class} style={mapStyle}>\n                {display}\n            </div>\n        );\n    }\n}\n\nexport const MAP_SPACE_TYPES = {\n    \"OPEN\": 1,\n    \"HOME\": 2,\n    \"SYSTEM\": 3,\n    \"CLOSED\": 4,\n    \"WARP\": 5,\n};\n\nexport class HexComponent extends React.Component {\n    onDrop(event) {\n        if(this.props.onDrop) {\n            this.props.onDrop(event);\n        }\n    }\n\n    render() {\n        let hexSize = this.props.hexSize;\n        return(\n            <div\n                className=\"hex-container\"\n                style={this.props.posStyle}\n                draggable={this.props.draggable}\n                onDragStart={(event)=>this.props.onDrag(event)}\n                onDragEnd={(event)=>this.props.onDragEnd(event)}\n            >\n                <svg className=\"shape-container\">\n                    <polygon\n                        onClick={()=>this.props.onClick()}\n                        className={(this.props.outlined ? \"outlined \": \"\")+\"hexagon \"+this.props.hexClass}\n                        points={\n                            (hexSize)+\", \"+(hexSize*.433)+\" \"+\n                            (hexSize*.75)+\", \"+(hexSize*.866)+\" \"+\n                            (hexSize*.25)+\", \"+(hexSize*.866)+\" \"+\n                            \"0, \"+(hexSize*.433)+\" \"+\n                            (hexSize*.25)+\", 0 \"+\n                            (hexSize*.75)+\", 0\"\n                        }\n                    >\n                    </polygon>\n                    {this.props.svgElements}\n                </svg>\n                <div\n                    className={\"hex-content \"+this.props.hexClass}\n                    onClick={()=>this.props.onClick()}\n                    onDragOver={(event)=>{event.preventDefault();}}\n                    onDrop={(event)=>this.onDrop(event)}\n                >\n                    {this.props.children}\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport class MapSpaceComponent extends React.Component {\n    getPositionStyle() {\n        let hexSize = this.props.hexSize;\n        let mapCenterH = this.props.mapCenterH;\n        let mapCenterV = this.props.mapCenterV;\n        let spaceOffsetV = hexSize *.5*.866;\n        let spaceOffsetH = hexSize*.5;\n        let x = this.props.space.x;\n        let y = this.props.space.y;\n        let z = this.props.space.z;\n\n        let xhmod = x*hexSize*.75/2 + x*hexSpace*.5;\n        let xvmod = 0;\n        let yhmod = -y*hexSize*.75/2 - y*hexSpace*.5;\n        let yvmod = -y*(hexSize*.866/2) - y*(hexSpace/2);\n        let zhmod = -z*hexSize*.75/2 - z*hexSpace*.5;\n        let zvmod = z*(hexSize*.866/2) + z*(hexSpace/2);\n\n        let left = mapCenterH - spaceOffsetH + xhmod + yhmod + zhmod;\n        let top = mapCenterV - spaceOffsetV + xvmod + yvmod + zvmod;\n\n        return {\"left\": left+\"px\", \"top\": top+\"px\"};\n    }\n\n    render() {\n        let display = null;\n        let type = this.props.space.type;\n        let posStyle = this.getPositionStyle();\n        switch(type) {\n            case MAP_SPACE_TYPES.OPEN:\n                display = (\n                    <HexComponent\n                        onClick={()=>this.props.onClick()}\n                        posStyle={posStyle}\n                        hexSize={this.props.hexSize}\n                        hexClass=\"open\"\n                        onDrop={(event)=>this.props.onDrop(event)}\n                    >\n                        +\n                    </HexComponent>\n                );\n                break;\n            case MAP_SPACE_TYPES.HOME:\n                let home_text = null\n                if(this.props.home_value !== null) {\n                    home_text = (<div>{this.props.home_value}</div>);\n                }\n                display = (\n                    <HexComponent\n                        onClick={()=>this.props.onClick()}\n                        posStyle={posStyle}\n                        hexSize={this.props.hexSize}\n                        hexClass=\"home\"\n                    >\n                        {home_text}<div>{this.props.home_stats}</div>\n                    </HexComponent>\n                );\n                break;\n            case MAP_SPACE_TYPES.SYSTEM:\n                display = (\n                    <SystemComponent\n                        system={this.props.space.system}\n                        format={this.props.system_format}\n                        posStyle={posStyle}\n                        onClick={()=>this.props.onClick()}\n                        hexSize={this.props.hexSize}\n                        draggable={this.props.draggable}\n                        onDrag={(event)=>this.props.onDrag(event)}\n                        onDragEnd={(event)=>this.props.onDragEnd(event)}\n                        onDrop={(event)=>this.props.onDrop(event)}\n                        eval_variables={this.props.eval_variables}\n                    />\n                );\n                break;\n            case MAP_SPACE_TYPES.CLOSED:\n                display = (\n                    <HexComponent\n                        onClick={()=>this.props.onClick()}\n                        posStyle={posStyle}\n                        hexSize={this.props.hexSize}\n                        hexClass=\"closed\"\n                    >\n                    </HexComponent>\n                );\n                break;\n            case MAP_SPACE_TYPES.WARP:\n                display = (\n                    <WarpComponent\n                        posStyle={posStyle}\n                        onClick={()=>this.props.onClick()}\n                        warps={this.props.space.warp_spaces}\n                        hexSize={this.props.hexSize}\n                    />\n                );\n                break;\n            default:\n                break;\n        }\n        return display;\n    }\n}\n\nexport class WarpComponent extends React.Component {\n    get_endpoint_coords(coords, hexSize) {\n        switch(coords) {\n            case WARP_DIRECTIONS.NORTH:\n                return {\n                    \"x\": hexSize*.5,\n                    \"y\": 0,\n                };\n            case WARP_DIRECTIONS.NORTHEAST:\n                return {\n                    \"x\": hexSize*(7/8),\n                    \"y\": .866*hexSize*(1/4),\n                };\n            case WARP_DIRECTIONS.SOUTHEAST:\n                return {\n                    \"x\": hexSize*(7/8),\n                    \"y\": .866*hexSize*(3/4),\n                };\n            case WARP_DIRECTIONS.SOUTH:\n                return {\n                    \"x\": hexSize*.5,\n                    \"y\": hexSize*.866,\n                };\n            case WARP_DIRECTIONS.SOUTHWEST:\n                return {\n                    \"x\": hexSize*(1/8),\n                    \"y\": hexSize*.866*(3/4),\n                };\n            case WARP_DIRECTIONS.NORTHWEST:\n                return {\n                    \"x\": hexSize*(1/8),\n                    \"y\": hexSize*.866*(1/4),\n                };\n            default:\n                return {\n                    \"x\": 0,\n                    \"y\": 0,\n                };\n        }\n    }\n\n\n    render() {\n        let posStyle = this.props.posStyle;\n\n        let warp_lines = [];\n        let hexSize = this.props.hexSize;\n        for(let [index, one_warp] of warp_configs[this.props.warps].entries()) {\n            let start_coords = this.get_endpoint_coords(one_warp[0], hexSize);\n            let end_coords = this.get_endpoint_coords(one_warp[1], hexSize);\n            warp_lines.push(\n                <line className=\"warp-line\"\n                    x1={start_coords.x}\n                    y1={start_coords.y}\n                    x2={end_coords.x}\n                    y2={end_coords.y}\n                    onClick={()=>this.props.onClick()}\n                    key={\"warp_line_\"+index}\n                />\n            );\n        }\n\n        return(\n            <HexComponent\n                onClick={()=>this.props.onClick()}\n                posStyle={posStyle}\n                hexSize={this.props.hexSize}\n                hexClass={\"warp\"}\n                svgElements={warp_lines}\n            >\n            </HexComponent>\n        );\n    }\n}\n\nexport const SYSTEM_FORMATS = {\n    \"STREAMLINED\": 0,\n    \"STREAMLINED_WITH_NAME\": 1,\n    \"COLORBLIND_FRIENDLY\": 2,\n    \"COLORBLIND_FRIENDLY_WITH_NAME\": 3,\n    \"ID_ONLY\": 4,\n};\n\nexport class SystemComponent extends React.Component {\n\n    render() {\n        let system = this.props.system;\n        let format = this.props.format;\n        let posStyle = this.props.posStyle;\n        let display = null;\n        let id_div = (<div className=\"id\">{system.id}</div>);\n        let extras = [];\n        let value_div = null;\n        if(this.props.eval_variables && system.planets.length>0) {\n            value_div = (<div className=\"value\">={system.evaluate(this.props.eval_variables)}</div>);\n        }\n        if(system.wormhole !== null) {\n            switch(system.wormhole) {\n                case WORMHOLES.ALPHA:\n                    extras.push(<div className=\"wormhole alpha\" key=\"alpha_wh\">a</div>);\n                    break;\n                case WORMHOLES.BETA:\n                    extras.push(<div className=\"wormhole beta\" key=\"alpha_wh\">b</div>);\n                    break;\n                default: break;\n            }\n        }\n        if(system.anomaly !== null) {\n            switch(system.anomaly) {\n                case ANOMALIES.SUPERNOVA:\n                    extras.push(<div className=\"supernova\" key=\"supernova\"></div>);\n                    break;\n                case ANOMALIES.GRAVITY_RIFT:\n                    extras.push(<div className=\"gravity-rift\" key=\"gravity-rift\"></div>);\n                    break;\n                case ANOMALIES.NEBULA:\n                    extras.push(<div className=\"nebula\" key=\"nebula\"></div>);\n                    break;\n                case ANOMALIES.ASTEROID_FIELD:\n                    extras.push(\n                        <div className=\"asteroid-field\" key=\"asteroid-field\">\n                            <div className=\"asteroid a\"></div>\n                            <div className=\"asteroid b\"></div>\n                            <div className=\"asteroid c\"></div>\n                            <div className=\"asteroid d\"></div>\n                            <div className=\"asteroid e\"></div>\n                        </div>\n                    );\n                    break;\n                default:\n                    break;\n            }\n        }\n        let rex_class = \"\";\n        if(system.isMecatolRexSystem()) rex_class = \"rex\";\n        let hex_props = {\n            onClick:()=>this.props.onClick(),\n            posStyle:posStyle,\n            hexSize:this.props.hexSize,\n            hexClass:rex_class,\n            draggable:this.props.draggable,\n            onDrag:(event)=>this.props.onDrag(event),\n            onDragEnd:(event)=>this.props.onDragEnd(event),\n            onDrop:(event)=>this.props.onDrop(event),\n\t\t\toutlined:system.isLegendary() || system.isMecatolRexSystem(),\n        };\n\n        switch(format) {\n            case SYSTEM_FORMATS.ID_ONLY:\n                display = (\n                    <HexComponent {...hex_props} >\n                        <span className=\"id-alone\">\n                            {system.id}\n                        </span>\n                    </HexComponent>\n                );\n                break;\n            case SYSTEM_FORMATS.STREAMLINED_WITH_NAME:\n                display = (\n                    <HexComponent {...hex_props} >\n                        {id_div}\n                        {value_div}\n                        {system.planets.map(function(planet, index) {\n                            return(\n                                <PlanetComponent\n                                    planet={planet}\n                                    key={planet.name}\n                                    format={PLANET_FORMATS.STREAMLINED_WITH_NAME}\n                                />\n                            )\n                        }, this)}\n                        {extras}\n                    </HexComponent>\n                );\n                break;\n            case SYSTEM_FORMATS.STREAMLINED:\n                display = (\n                    <HexComponent {...hex_props} >\n                        {id_div}\n                        {value_div}\n                        {system.planets.map(function(planet, index) {\n                            return(\n                                <PlanetComponent\n                                    planet={planet}\n                                    key={planet.name}\n                                    format={PLANET_FORMATS.STREAMLINED}\n                                />\n                            )\n                        }, this)}\n                        {extras}\n                    </HexComponent>\n                );\n                break;\n            case SYSTEM_FORMATS.COLORBLIND_FRIENDLY:\n                display = (\n                    <HexComponent {...hex_props} >\n                        {id_div}\n                        {value_div}\n                        {system.planets.map(function(planet, index) {\n                            return(\n                                <PlanetComponent\n                                    planet={planet}\n                                    key={planet.name}\n                                    format={PLANET_FORMATS.COLORBLIND_FRIENDLY}\n                                />\n                            )\n                        }, this)}\n                    </HexComponent>\n                );\n                break;\n            case SYSTEM_FORMATS.COLORBLIND_FRIENDLY_WITH_NAME:\n                display = (\n                    <HexComponent {...hex_props} >\n                        {id_div}\n                        {value_div}\n                        {system.planets.map(function(planet, index) {\n                            return(\n                                <PlanetComponent\n                                    planet={planet}\n                                    key={planet.name}\n                                    format={PLANET_FORMATS.COLORBLIND_FRIENDLY_WITH_NAME}\n                                />\n                            )\n                        }, this)}\n                    </HexComponent>\n                );\n                break;\n            default:\n                break;\n        }\n        return display;\n    }\n}\n\nexport const PLANET_FORMATS = {\n    \"STREAMLINED\": 0,\n    \"STREAMLINED_WITH_NAME\": 1,\n    \"COLORBLIND_FRIENDLY\": 2,\n    \"COLORBLIND_FRIENDLY_WITH_NAME\": 3,\n};\n\nexport class PlanetComponent extends React.Component {\n\n    render() {\n        let planet = this.props.planet;\n        let format = this.props.format;\n        let trait_class = \"\";\n        let trait_abbr = \"\";\n        switch(planet.trait) {\n            case PLANET_TRAITS.INDUSTRIAL:\n                trait_class = \"industrial\";\n                trait_abbr = \"I\";\n                break;\n            case PLANET_TRAITS.HAZARDOUS:\n                trait_class = \"hazardous\";\n                trait_abbr = \"H\";\n                break;\n            case PLANET_TRAITS.CULTURAL:\n                trait_class=\"cultural\";\n                trait_abbr = \"C\";\n                break;\n            default:\n                break;\n        }\n        let tech_class = \"\";\n        let tech_abbr = \"\";\n        switch(planet.tech_specialty) {\n            case TECH_SPECIALTIES.CYBERNETIC:\n                tech_class = \"cybernetic\";\n                tech_abbr = \"Y\";\n                break;\n            case TECH_SPECIALTIES.PROPULSION:\n                tech_class = \"propulsion\";\n                tech_abbr = \"B\";\n                break;\n            case TECH_SPECIALTIES.BIOTIC:\n                tech_class = \"biotic\";\n                tech_abbr = \"G\";\n                break;\n            case TECH_SPECIALTIES.WARFARE:\n                tech_class = \"warfare\";\n                tech_abbr = \"R\";\n                break;\n            default:\n                break;\n        }\n\t\tlet legendary_class = \"\";\n\t\tif(planet.name===\"Primor\" || planet.name===\"Hope's End\") {\n\t\t\tlegendary_class = \" legendary\";\n\t\t}\n        let name_stuff = null;\n        if(\n            format===PLANET_FORMATS.STREAMLINED_WITH_NAME\n            || format===PLANET_FORMATS.COLORBLIND_FRIENDLY_WITH_NAME\n        ) {\n            name_stuff=(<span className=\"name\">{ planet.name }</span>);\n        }\n        let values = (\n            <div className=\"value_container\">\n                <span className=\"resources\">{ planet.resources }</span>\n                <span className=\"influence\">{ planet.influence }</span>\n            </div>);\n        if(\n            format===PLANET_FORMATS.COLORBLIND_FRIENDLY_WITH_NAME\n            || format===PLANET_FORMATS.COLORBLIND_FRIENDLY\n        ) {\n            values = (\n                <div className=\"value_container\">\n                    <span className={\"tech \"+tech_class}>{tech_abbr}</span>\n                    <span className=\"resources\">{ planet.resources }</span>\n                    <span className=\"influence\">{ planet.influence }</span>\n                    <span className={\"trait \"+trait_class}>{trait_abbr}</span>\n                </div>\n            )\n        }\n        return (\n            <div className={\"planet \"+trait_class+\" \"+tech_class+legendary_class}>\n                {values}\n                {name_stuff}\n            </div>\n        );\n    }\n}\n","import {MAP_SPACE_TYPES} from \"./map-components\";\nimport {warp_configs} from \"./data/warp_data\";\nimport {ANOMALIES, PLANET_TRAITS, TECH_SPECIALTIES, WORMHOLES} from \"./data/tile_data\";\n\nexport const PLANET_EVAL_STRATEGIES = {\n    \"SUM\": 1,\n    \"GREATEST\": 2,\n    \"GREATEST_PLUS_TECH\": 3,\n};\n\nexport class Planet {\n    constructor(obj_data) {\n        this.trait = obj_data.trait;\n        this.tech_specialty = obj_data.tech_specialty;\n        this.resources = obj_data.resources;\n        this.influence = obj_data.influence;\n        this.name = obj_data.name;\n    }\n\n    evaluate(variables) {\n        let v = variables.data;\n        let value = v.BASE_PLANET_MOD;\n        let r = this.resources*v.RESOURCES_MULTIPLIER,\n            i = this.influence*v.INFLUENCE_MULTIPLIER;\n        let t = 0;\n        if(this.tech_specialty!==null) {\n            t+=v.TECH_MOD;\n            switch(this.tech_specialty) {\n                case TECH_SPECIALTIES.WARFARE:\n                    t+=v.TECH_WARFARE_MOD;\n                    break;\n                case TECH_SPECIALTIES.PROPULSION:\n                    t+=v.TECH_PROPULSION_MOD;\n                    break;\n                case TECH_SPECIALTIES.BIOTIC:\n                    t+=v.TECH_BIOTIC_MOD;\n                    break;\n                case TECH_SPECIALTIES.CYBERNETIC:\n                    t+=v.TECH_CYBERNETIC_MOD;\n                    break;\n                default:\n                    break;\n            }\n        }\n        switch(v.PLANET_STRATEGY) {\n            case PLANET_EVAL_STRATEGIES.GREATEST:\n                let to_add = r;\n                if(i>to_add) to_add = i;\n                if(t>to_add) to_add = t;\n                value += to_add;\n                break;\n            case PLANET_EVAL_STRATEGIES.AVERAGE:\n                value += (r+i+t)/3;\n                break;\n            default:\n                let high_one = r;\n                if(i>high_one) high_one = i;\n                value += high_one+t;\n                break;\n        }\n        if(r>0) value+= v.NONZERO_RESOURCES_MOD;\n        if(i>0) value+= v.NONZERO_INFLUENCE_MOD;\n        switch(this.trait) {\n            case PLANET_TRAITS.CULTURAL:\n                value+=v.TRAIT_CULTURAL_MOD;\n                break;\n            case PLANET_TRAITS.HAZARDOUS:\n                value+=v.TRAIT_HAZARDOUS_MOD;\n                break;\n            case PLANET_TRAITS.INDUSTRIAL:\n                value+=v.TRAIT_INDUSTRIAL_MOD;\n                break;\n            default:\n                break;\n        }\n        return value;\n    }\n}\n\nexport class PlanetBox {\n    constructor(planet_data) {\n        this.planets = [];\n        for(let one_planet_data of planet_data) {\n            this.planets.push(new Planet(one_planet_data));\n        }\n    }\n\n    getPlanetByName(name) {\n        for(let one_planet of this.planets) {\n            if (one_planet.name === name) {\n                return one_planet;\n            }\n        }\n        return null;\n    }\n}\n\nexport class System {\n    constructor(obj_data, planet_box) {\n        this.id = obj_data.id;\n        this.anomaly = obj_data.anomaly;\n        this.wormhole = obj_data.wormhole;\n        this.planets = [];\n        for(let planet_name of obj_data.planets) {\n            let plToAdd = planet_box.getPlanetByName(planet_name);\n            if(plToAdd) this.planets.push(plToAdd);\n        }\n    }\n\n    evaluate(variables) {\n        let v = variables.data;\n        let value=0;\n        for(let one_planet of this.planets) {\n            value+=one_planet.evaluate(variables);\n        }\n        if(this.planets.length===1) {\n            value+=v.SINGLE_PLANET_MOD;\n        } else if(this.planets.length===2) {\n            value+=v.MULTI_PLANET_MOD;\n            if(this.planets[0].trait === this.planets[1].trait) {\n                value+=v.MATCHING_PLANETS_MOD;\n            } else {\n                value+=v.NONMATCHING_PLANETS_MOD;\n            }\n        } else if(this.planets.length>2) {\n            value+=2*v.MULTI_PLANET_MOD;\n            value+=v.MATCHING_PLANETS_MOD;\n        }\n        if(this.isMecatolRexSystem()) {\n            value+=v.MECATOL_REX_SYS_MOD;\n        }\n        if(this.isLegendary()) {\n            let legendary_mod = v.LEGENDARY_PLANET_SYS_MOD || 0;\n            value+=legendary_mod;\n        }\n        return value;\n    }\n\t\n\tisLegendary() {\n\t\treturn this.id === 65 || this.id === 66;\n\t}\n\n    getDistanceModifier(variables = {}) {\n        let v = variables.data;\n        let value = v.DISTANCE_MOD_BASE;\n        if(this.isBlue() || this.isMecatolRexSystem()) {\n            if(v.DISTANCE_MOD_PLANET===false) return false;\n            value+=v.DISTANCE_MOD_PLANET;\n            if(this.wormhole!==null) {\n                if(v.DISTANCE_MOD_PLANET_WORMHOLE===false) return false;\n                value+=v.DISTANCE_MOD_PLANET_WORMHOLE;\n            }\n        } else if(this.anomaly===null) {\n            if(this.wormhole!==null) {\n                if(v.DISTANCE_MOD_EMPTY_WORMHOLE===false) return false;\n                value+=v.DISTANCE_MOD_EMPTY_WORMHOLE;\n            } else {\n                if(v.DISTANCE_MOD_EMPTY===false) return false;\n                value+=v.DISTANCE_MOD_EMPTY;\n            }\n        }\n        switch(this.anomaly) {\n            case ANOMALIES.ASTEROID_FIELD:\n                if(v.DISTANCE_MOD_ASTEROID_FIELD===false) return false;\n                value+=v.DISTANCE_MOD_ASTEROID_FIELD;\n                break;\n            case ANOMALIES.GRAVITY_RIFT:\n                if(v.DISTANCE_MOD_GRAVITY_RIFT===false) return false;\n                value+=v.DISTANCE_MOD_GRAVITY_RIFT;\n                break;\n            case ANOMALIES.NEBULA:\n                if(v.DISTANCE_MOD_NEBULA===false) return false;\n                value+=v.DISTANCE_MOD_NEBULA;\n                break;\n            case ANOMALIES.SUPERNOVA:\n                if(v.DISTANCE_MOD_SUPERNOVA===false) return false;\n                value+=v.DISTANCE_MOD_SUPERNOVA;\n                break;\n            default:\n                break;\n        }\n        return value;\n    }\n\n    isMecatolRexSystem() {\n        for(let planet of this.planets) {\n            if (planet.name === \"Mecatol Rex\") return true;\n        }\n        return false;\n    }\n\n    isRed() {\n        if(this.planets.length<1 || this.anomaly !== null) return true;\n        return false;\n    }\n\n    isBlue() {\n        return !this.isRed() && !this.isMecatolRexSystem();\n    }\n\n    getStringName() {\n        let system = this;\n        let name_array = [];\n        for(let planet of system.planets) {\n\t\t\tlet tech = \"\";\n\t\t\tswitch(planet.tech_specialty) {\n\t\t\tcase TECH_SPECIALTIES.BIOTIC:\n\t\t\t\ttech = \"/G\";\n\t\t\t\tbreak;\n\t\t\tcase TECH_SPECIALTIES.WARFARE:\n\t\t\t\ttech = \"/R\";\n\t\t\t\tbreak;\n\t\t\tcase TECH_SPECIALTIES.CYBERNETIC:\n\t\t\t\ttech = \"/Y\";\n\t\t\t\tbreak;\n\t\t\tcase TECH_SPECIALTIES.PROPULSION:\n\t\t\t\ttech = \"/B\";\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tbreak;\n\t\t\t}\n            name_array.push(\n\t\t\t\tplanet.name+\" (\"+planet.resources+\"/\"+planet.influence+tech+\")\"\n\t\t\t);\n        }\n        if(system.wormhole !== null) {\n            switch(system.wormhole) {\n                case WORMHOLES.ALPHA:\n                    name_array.push(\"(a)\");\n                    break;\n                case WORMHOLES.BETA:\n                    name_array.push(\"(b)\");\n                    break;\n                default: break;\n            }\n        }\n        if(system.anomaly !== null) {\n            switch(system.anomaly) {\n                case ANOMALIES.SUPERNOVA:\n                    name_array.push(\"Supernova\");\n                    break;\n                case ANOMALIES.GRAVITY_RIFT:\n                    name_array.push(\"Gravity Rift\");\n                    break;\n                case ANOMALIES.NEBULA:\n                    name_array.push(\"Nebula\");\n                    break;\n                case ANOMALIES.ASTEROID_FIELD:\n                    name_array.push(\"Asteroid Field\");\n                    break;\n                default:\n                    break;\n            }\n        }\n        if(name_array.length===0) name_array.push(\"Empty Space\");\n        return system.id+\": \"+name_array.join(\", \");\n    }\n}\n\nexport class SystemBox {\n    constructor(system_data, planet_box) {\n        this.systems = [];\n        this.planet_box = planet_box;\n        for(let one_system_data of system_data) {\n            this.systems.push(new System(one_system_data, planet_box));\n        }\n    }\n\n    getBlueSystemTotal() {\n        let total = 0;\n        for(let system of this.systems) {\n            if(system.isBlue()) {\n                total++;\n            }\n        }\n        return total;\n    }\n\n    getRedSystemTotal() {\n        let total = 0;\n        for(let system of this.systems) {\n            if(system.isRed()) {\n                total++;\n            }\n        }\n        return total;\n    }\n\n    getSystemIndexByID(id) {\n        for(let [index, system] of this.systems.entries()) {\n            if(system.id === id) return index;\n        }\n        return null;\n    }\n\n    getSystemByID(id, splice=false) {\n        let sysindex = this.getSystemIndexByID(id);\n        if (sysindex!==null && splice) return this.systems.splice(sysindex, 1);\n        if (sysindex!==null) return this.systems[sysindex];\n        return null;\n    }\n\n    makeCopy() {\n        let new_system_box = new SystemBox([], this.planet_box);\n        for(let one_system of this.systems) {\n            new_system_box.systems.push(one_system);\n        }\n        return new_system_box;\n    }\n\n    getWormholeSystems(type=null) {\n        let systems_to_return = [];\n        for(let one_sys of this.systems) {\n            if(\n                one_sys.wormhole!==null\n                &&\n                (\n                    type===null\n                    ||\n                    one_sys.wormhole===type\n                )\n            ) {\n                systems_to_return.push(one_sys);\n            }\n        }\n        return systems_to_return;\n    }\n}\n\nexport function getDistanceMultiplier(modded_distance, variables) {\n    let v = variables.data;\n    let d = modded_distance;\n    if(d<0) d = 0;\n    if(d>10) d = 10;\n    return v.DISTANCE_MULTIPLIER[d];\n}\n\nexport class Map {\n    constructor(load_default=true, starting_space=null, iterations=3) {\n        if(load_default) {\n            this.spaces = [starting_space];\n            for(let i=0; i<iterations; i++) {\n                this.addAdjacentSpaces();\n            }\n        } else {\n            this.spaces = [];\n        }\n    }\n\n    makeCopy() {\n        let new_map = new Map(false);\n        for(let one_space of this.spaces) {\n            let new_space = new MapSpace(\n                one_space.x,\n                one_space.y,\n                one_space.z,\n                one_space.warp_spaces,\n                one_space.type,\n                one_space.system,\n            );\n            new_map.spaces.push(new_space);\n        }\n        return new_map;\n    }\n\n    containsSystem(system_id) {\n        return (this.getSpaceBySystemID(system_id) !== null);\n    }\n\n    getSpaceBySystemID(id) {\n        for(let one_space of this.spaces) {\n            if(\n                one_space.system!==null\n                && one_space.system.id===id\n            ) return one_space;\n        }\n        return null;\n    }\n\t\n\tfindSpaceDistance(space_a, space_b, max=5) {\n\t\tlet checked_spaces = [space_a];\n\t\tlet new_to_check_adj = [space_a];\n\t\tfor(let i=0; i<=max; i++) {\n\t\t\tif(areCoordsInList(space_b, checked_spaces)) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t\tlet new_new_check = [];\n\t\t\tfor(let one_space of new_to_check_adj) {\n\t\t\t\tlet new_adj = this.getAdjacentSpacesIncludingWormholes(one_space);\n\t\t\t\tfor(let one_adj of new_adj) {\n\t\t\t\t\tif(!areCoordsInList(one_adj, checked_spaces)) {\n\t\t\t\t\t\tchecked_spaces.push(one_adj);\n\t\t\t\t\t\tnew_new_check.push(one_adj);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tnew_to_check_adj = new_new_check;\n\t\t}\n\t\treturn max+1;\n\t}\n\t\n\tgetHomeSystemStats() {\n\t\tlet stats = [];\n\t\tlet nonhomes = [];\n\t\tfor(let space of this.spaces) {\n\t\t\tif(space.type===MAP_SPACE_TYPES.HOME) {\n\t\t\t\tstats.push({home: space, slice: []});\n\t\t\t} else if(space.type===MAP_SPACE_TYPES.SYSTEM && space.system.planets.length>0) {\n\t\t\t\tnonhomes.push(space)\n\t\t\t}\n\t\t}\n\t\tfor(let space of nonhomes) {\n\t\t\tlet best = 50;\n\t\t\tlet winner = null;\n\t\t\tfor(let i=0;i<stats.length;i++) {\n\t\t\t\tlet dis = this.findSpaceDistance(stats[i].home, space);\n\t\t\t\tif(dis < best) {\n\t\t\t\t\tbest = dis;\n\t\t\t\t\twinner = i;\n\t\t\t\t} else if(dis===best) {\n\t\t\t\t\twinner = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(winner !== null) {\n\t\t\t\tstats[winner].slice.push(space);\n\t\t\t}\n\t\t}\n\t\tlet final_stats = [];\n\t\tfor(let one_stat of stats) {\n\t\t\tlet resources = 0;\n\t\t\tlet influence = 0;\n\t\t\tlet techs = \"\";\n\t\t\tfor(let one_system of one_stat.slice) {\n\t\t\t\tfor(let one_planet of one_system.system.planets) {\n\t\t\t\t\tresources += one_planet.resources;\n\t\t\t\t\tinfluence += one_planet.influence;\n\t\t\t\t\tswitch(one_planet.tech_specialty) {\n\t\t                case TECH_SPECIALTIES.WARFARE:\n\t\t                    techs += \"R\";\n\t\t                    break;\n\t\t                case TECH_SPECIALTIES.PROPULSION:\n\t\t                    techs += \"B\";\n\t\t                    break;\n\t\t                case TECH_SPECIALTIES.BIOTIC:\n\t\t                    techs += \"G\";\n\t\t                    break;\n\t\t                case TECH_SPECIALTIES.CYBERNETIC:\n\t\t                    techs += \"Y\";\n\t\t                    break;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ttechs = techs.split(\"\").sort().join(\"\");\n\t\t\tfinal_stats.push({\n\t\t\t\tx: one_stat.home.x, \n\t\t\t\ty: one_stat.home.y,\n\t\t\t\tz: one_stat.home.z,\n\t\t\t\tstats: resources+\"/\"+influence+\" \"+techs,\n\t\t\t});\n\t\t}\n\t\treturn final_stats;\n\t}\n\n    getOpenSpacesTotal() {\n        let total = 0;\n        for(let space of this.spaces) {\n            if(space.type===MAP_SPACE_TYPES.OPEN) {\n                total++;\n            }\n        }\n        return total;\n    }\n\n    getBlueSystemTotal() {\n        let total = 0;\n        for(let space of this.spaces) {\n            if(space.type===MAP_SPACE_TYPES.SYSTEM && space.system.isBlue()) {\n                total++;\n            }\n        }\n        return total;\n    }\n\n    getRedSystemTotal() {\n        let total = 0;\n        for(let space of this.spaces) {\n            if(space.type===MAP_SPACE_TYPES.SYSTEM && space.system.isRed()) {\n                total++;\n            }\n        }\n        return total;\n    }\n\t\n\tgetTotalResources() {\n\t\tlet total = 0;\n\t\tfor(let space of this.spaces) {\n\t\t\tif(space.type===MAP_SPACE_TYPES.SYSTEM) {\n\t\t\t\tfor(let planet of space.system.planets) {\n\t\t\t\t\ttotal += planet.resources;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn total;\n\t}\n\tgetTotalInfluence() {\n\t\tlet total = 0;\n\t\tfor(let space of this.spaces) {\n\t\t\tif(space.type===MAP_SPACE_TYPES.SYSTEM) {\n\t\t\t\tfor(let planet of space.system.planets) {\n\t\t\t\t\ttotal += planet.influence;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn total;\n\t}\n\tgetTotalTechSpecialties() {\n\t\tlet total = \"\";\n\t\tfor(let space of this.spaces) {\n\t\t\tif(space.type===MAP_SPACE_TYPES.SYSTEM) {\n\t\t\t\tfor(let planet of space.system.planets) {\n\t\t\t\t\tswitch(planet.tech_specialty) {\n\t\t                case TECH_SPECIALTIES.WARFARE:\n\t\t                    total += \"R\";\n\t\t                    break;\n\t\t                case TECH_SPECIALTIES.PROPULSION:\n\t\t                    total += \"B\";\n\t\t                    break;\n\t\t                case TECH_SPECIALTIES.BIOTIC:\n\t\t                    total += \"G\";\n\t\t                    break;\n\t\t                case TECH_SPECIALTIES.CYBERNETIC:\n\t\t                    total += \"Y\";\n\t\t                    break;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn total.split('').sort().join('');\n\t}\n\t\n\tgetPlanetTraitTotals() {\n\t\tlet ind = 0;\n\t\tlet cul = 0;\n\t\tlet haz = 0;\n\t\tfor(let space of this.spaces) {\n\t\t\tif(space.type===MAP_SPACE_TYPES.SYSTEM) {\n\t\t\t\tfor(let planet of space.system.planets) {\n\t\t\t\t\tswitch(planet.trait) {\n\t\t\t\t\tcase PLANET_TRAITS.HAZARDOUS:\n\t\t\t\t\t\thaz++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PLANET_TRAITS.CULTURAL:\n\t\t\t\t\t\tcul++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PLANET_TRAITS.INDUSTRIAL:\n\t\t\t\t\t\tind++;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn haz+\"/\"+ind+\"/\"+cul;\n\t}\n\n    getPossibleSystemTotal() {\n        let total = 0;\n        for(let space of this.spaces) {\n            if(\n                space.type===MAP_SPACE_TYPES.SYSTEM\n                || space.type===MAP_SPACE_TYPES.OPEN\n            ) {\n                total++;\n            }\n        }\n        return total;\n    }\n\n   areWarpsLogical() {\n        for(let space of this.spaces) {\n            if (space.type === MAP_SPACE_TYPES.WARP) {\n                for(let one_warp of warp_configs[space.warp_spaces]) {\n                    for(let one_warp_dir of one_warp) {\n                        if(!this.doesWarpDirectionConnect(one_warp_dir, space, [space])) {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    doesWarpDirectionConnect(warp_direction, space, checked_spaces) {\n        let whereItGoes = space.getWarpDirectionCoordinates(warp_direction);\n        let spaceItGoes = getObjFromCoord(whereItGoes, this.spaces);\n        if(!spaceItGoes) return false;\n        if(areCoordsInList(spaceItGoes, checked_spaces)) return false;\n        if(spaceItGoes.type === MAP_SPACE_TYPES.CLOSED) return false;\n        if(spaceItGoes.type === MAP_SPACE_TYPES.WARP) {\n            let oppositeDirection = {\n                \"x\": warp_direction.x*-1,\n                \"y\": warp_direction.y*-1,\n                \"z\": warp_direction.z*-1,\n            };\n            let directions_to_check = [];\n            for(let one_next_warp of warp_configs[spaceItGoes.warp_spaces]) {\n                if(areCoordsInList(oppositeDirection, [one_next_warp[0]])) {\n                    directions_to_check.push(one_next_warp[1]);\n                } else if(areCoordsInList(oppositeDirection, [one_next_warp[1]])) {\n                    directions_to_check.push(one_next_warp[0]);\n                }\n            }\n            if(directions_to_check.length === 0) return false;\n            checked_spaces.push(spaceItGoes);\n            for(let one_direction of directions_to_check) {\n                if(!this.doesWarpDirectionConnect(one_direction, spaceItGoes, checked_spaces)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    isComplete() {\n        for(let map_space of this.spaces) {\n            if(map_space.type===MAP_SPACE_TYPES.OPEN) {\n                return false;\n            }\n        }\n        return true;\n    }\n\t\n\tgetTotalOpen() {\n\t\treturn this.spaces.filter(space=>space.type===MAP_SPACE_TYPES.OPEN).length\n\t}\n\n    isLegal() {\n        let is_legal = true;\n        for(let map_space of this.spaces) {\n            if(map_space.type===MAP_SPACE_TYPES.SYSTEM && map_space.system.wormhole !== null) {\n                for(let one_sys of this.getAdjacentSystems(map_space)) {\n                    if(one_sys.type===MAP_SPACE_TYPES.SYSTEM && one_sys.system.wormhole===map_space.system.wormhole) {\n                        is_legal = false;\n                        break;\n                    }\n                }\n            }\n            if(map_space.type===MAP_SPACE_TYPES.SYSTEM && map_space.system.anomaly !== null) {\n                for(let one_sys of this.getAdjacentSystems(map_space)) {\n                    if(one_sys.type===MAP_SPACE_TYPES.SYSTEM && one_sys.system.anomaly!==null) {\n                        is_legal = false;\n                        break;\n                    }\n                }\n            }\n            if(!is_legal) break;\n        }\n        return is_legal;\n    }\n\n    getHomeValue(space, variables) {\n        let home_total = 0;\n        let spaces_to_get_to = [];\n        for(let one_space of this.spaces) {\n            if(\n                one_space.type===MAP_SPACE_TYPES.SYSTEM &&\n                one_space.system.evaluate(variables) > 0 &&\n\t\t\t\tgetCoordsDistance(space, one_space) < 5\n            ) {\n                spaces_to_get_to.push(one_space);\n            }\n        }\n        for(let one_space of spaces_to_get_to) {\n            let shortest_distance = this._getShortestModdedDistance(\n                space, one_space, variables\n            );\n            if(!(shortest_distance===null)) {\n                home_total+=getDistanceMultiplier(\n                    shortest_distance, variables\n                )*one_space.system.evaluate(variables);\n            }\n        }\n        return home_total;\n    }\n\n    _getShortestModdedDistance(start_space, dest_space, variables) {\n        let finished_paths = [];\n        let act_paths = [];\n\n        let first_steps = this.getAdjacentSystemsIncludingWormholes(start_space);\n        for(let one_step of first_steps) {\n            if(\n                one_step.system.getDistanceModifier(variables)!==false\n                && this.getMapDistanceModifier(start_space, dest_space, variables)!==false\n            ) {\n                let new_path = [one_step.system.id];\n                if(one_step.system.id===dest_space.system.id) {\n                    finished_paths.push(new_path);\n                } else {\n                    act_paths.push(new_path);\n                }\n            }\n        }\n        while(act_paths.length>0) {\n            let new_active_paths = [];\n            for(let one_path of act_paths) {\n                let results = this._extendPath(start_space, dest_space, one_path, variables);\n                for(let one_done of results.finished) {\n                    finished_paths.push(one_done);\n                }\n                for(let one_ongoing of results.ongoing) {\n                    new_active_paths.push(one_ongoing);\n                }\n            }\n            act_paths=new_active_paths;\n        }\n        let first_yet = false;\n        let shortest = null;\n        for(let one_path of finished_paths) {\n            let path_length = this._calculateModdedDistanceFromRaw(one_path, variables, start_space);\n            if(!first_yet || path_length<shortest) {\n                shortest = path_length;\n                first_yet = true;\n            }\n        }\n        return shortest;\n    }\n\n    _extendPath(start_space, dest_space, path, variables) {\n        let completed_paths = [];\n        let ongoing_paths = [];\n        let last_step = this.getSpaceBySystemID(path[path.length-1]);\n        let next_steps = this.getAdjacentSystemsIncludingWormholes(last_step);\n        for(let one_step of next_steps) {\n            if(one_step.system.id===dest_space.system.id) {\n                let path_copy = [...path, one_step.system.id];\n                completed_paths.push(path_copy);\n            } else if (\n                !(one_step.system.id in path)\n                && one_step.system.getDistanceModifier(variables)!==false\n                && this.getMapDistanceModifier(start_space, dest_space, variables)!==false\n                && path.length<4\n            ) {\n                let path_copy = [...path, one_step.system.id];\n                ongoing_paths.push(path_copy);\n            }\n        }\n        return({\n            \"finished\": completed_paths,\n            \"ongoing\": ongoing_paths,\n        });\n    }\n\n\n    _calculateModdedDistanceFromRaw(path, variables, start_space) {\n        let modded_dist = 0;\n        for(let one_index of path) {\n            let one_sys = this.getSpaceBySystemID(one_index);\n            modded_dist+=\n                one_sys.system.getDistanceModifier(variables)\n                +this.getMapDistanceModifier(start_space, one_sys, variables);\n        }\n        return modded_dist;\n    }\n\n    getMapDistanceModifier(start_space, dest_space, variables) {\n        let adj_spaces = this.getAdjacentSpacesIncludingWormholes(dest_space);\n        for(let one_space of adj_spaces) {\n            if(\n                one_space.type===MAP_SPACE_TYPES.HOME &&\n                !areCoordsInList(start_space, [one_space]\n                )\n            ) {\n                return variables.data.DISTANCE_MOD_ADJACENT_TO_OPPONENT;\n            }\n        }\n        return 0;\n    }\n\n\n\n    addAdjacentSpaces() {\n        let coords_to_add = [];\n        for(let map_space of this.spaces) {\n            let adjacent_coords = map_space.getAdjacentCoordinates();\n            for(let one_adjacent_coords of adjacent_coords) {\n                if(\n                    !areCoordsInList(one_adjacent_coords, coords_to_add) &&\n                    !areCoordsInList(one_adjacent_coords, this.spaces)\n                ) {\n                    coords_to_add.push(one_adjacent_coords);\n                }\n            }\n        }\n        for(let one_coords_to_add of coords_to_add) {\n            this.spaces.push(new MapSpace(\n                one_coords_to_add.x,\n                one_coords_to_add.y,\n                one_coords_to_add.z,\n            ));\n        }\n    }\n\n    _getAdjacentSpacesThroughWarps(system_space, warp_space) {\n        let adj_systems = [];\n        let direction_from = {\n            \"x\": system_space.x - warp_space.x,\n            \"y\": system_space.y - warp_space.y,\n            \"z\": system_space.z - warp_space.z,\n        };\n        let warps_to_follow = [];\n        for(let one_warp of warp_configs[warp_space.warp_spaces]) {\n            if(areCoordsInList(direction_from, one_warp)) {\n                warps_to_follow.push(one_warp);\n            }\n        }\n        for(let one_warp of warps_to_follow) {\n            for(let one_warp_direction of one_warp) {\n                if(!areCoordsInList(one_warp_direction, [direction_from])) {\n                    let next_space = getObjFromCoord(\n                        warp_space.getWarpDirectionCoordinates(one_warp_direction),\n                        this.spaces\n                    );\n                    if(next_space!==null) {\n                        if(next_space.type!==MAP_SPACE_TYPES.WARP) {\n                            if (!areCoordsInList(next_space, adj_systems)) {\n                                adj_systems.push(next_space);\n                            }\n                        } else {\n                            let farther_systems = this._getAdjacentSpacesThroughWarps(warp_space, next_space);\n                            for(let one_far_sys of farther_systems) {\n                                if(!areCoordsInList(one_far_sys, adj_systems)) {\n                                    adj_systems.push(one_far_sys);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return adj_systems;\n    }\n\n    getAdjacentSystems(space) {\n        let adj_spaces = this.getAdjacentSpaces(space);\n        let adj_systems = [];\n        for(let one_space of adj_spaces) {\n            if(one_space.type===MAP_SPACE_TYPES.SYSTEM){\n                adj_systems.push(one_space);\n            }\n        }\n        return adj_systems;\n    }\n\n    getAdjacentSpaces(space) {\n        let adj_coords = space.getAdjacentCoordinates();\n        let adj_systems = [];\n        for(let one_coord of adj_coords) {\n            let potential_space = getObjFromCoord(one_coord, this.spaces);\n            if(potential_space !== null) {\n                if(potential_space.type!==MAP_SPACE_TYPES.WARP){\n                    if(!areCoordsInList(potential_space, adj_systems)) {\n                        adj_systems.push(potential_space);\n                    }\n                } else {\n                    let potential_systems = this._getAdjacentSpacesThroughWarps(space, potential_space);\n                    for(let one_system_space of potential_systems) {\n                        if(!areCoordsInList(one_system_space, adj_systems)) {\n                            adj_systems.push(one_system_space);\n                        }\n                    }\n                }\n            }\n        }\n        return adj_systems;\n    }\n\n    getAdjacentSystemsIncludingWormholes(space) {\n        let adj_spaces = this.getAdjacentSpacesIncludingWormholes(space);\n        let adj_systems = [];\n        for(let one_space of adj_spaces) {\n            if(one_space.type===MAP_SPACE_TYPES.SYSTEM) {\n                adj_systems.push(one_space);\n            }\n        }\n        return adj_systems;\n    }\n\n    getAdjacentSpacesIncludingWormholes(space) {\n        let adj_systems = this.getAdjacentSpaces(space);\n        let wh_systems = this.getMatchingWormholeSpaces(space);\n        for(let one_whs of wh_systems) {\n            if(!areCoordsInList(one_whs, adj_systems)) {\n                adj_systems.push(one_whs);\n            }\n        }\n        return adj_systems;\n    }\n\n    getMatchingWormholeSpaces(space) {\n        let matching_spaces = [];\n        if(space.type===MAP_SPACE_TYPES.SYSTEM && space.system.wormhole!==null) {\n            for(let one_space of this.spaces) {\n                if(\n                    one_space.type===MAP_SPACE_TYPES.SYSTEM &&\n                    one_space.system.wormhole===space.system.wormhole &&\n                    one_space.system.id !== space.system.id\n                ) {\n                    matching_spaces.push(one_space);\n                }\n            }\n        }\n        return matching_spaces;\n    }\n\n}\n\nexport function getObjFromCoord(coords, list) {\n        for(let existing_coords of list) {\n        if(\n            coords.x === existing_coords.x &&\n            coords.y === existing_coords.y &&\n            coords.z === existing_coords.z\n        ) {\n            return existing_coords;\n        }\n    }\n    return null;\n}\n\nexport function getCoordsDistance(coords1, coords2) {\n\treturn Math.max(\n\t\tMath.abs(coords1.x-coords2.x),\n\t\tMath.abs(coords1.y-coords2.y),\n\t\tMath.abs(coords1.z-coords2.z),\n\t)\n}\n\nexport function areCoordsInList(coords, list) {\n    if(getObjFromCoord(coords, list)) {\n        return true;\n    }\n    return false;\n}\n\nexport class MapSpace {\n    constructor(x, y, z, warp_spaces=null, type=MAP_SPACE_TYPES.OPEN, system=null) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.warp_spaces = warp_spaces;\n        this.type = type;\n        this.system = system;\n    }\n\n    getAdjacentCoordinates() {\n        return [\n            {\"x\":this.x+1,\"y\":this.y-1,\"z\":this.z},\n            {\"x\":this.x+1,\"y\":this.y,\"z\":this.z-1},\n            {\"x\":this.x-1,\"y\":this.y+1,\"z\":this.z},\n            {\"x\":this.x,\"y\":this.y+1,\"z\":this.z-1},\n            {\"x\":this.x-1,\"y\":this.y,\"z\":this.z+1},\n            {\"x\":this.x,\"y\":this.y-1,\"z\":this.z+1},\n        ];        \n    }\n\n    getWarpDirectionCoordinates(warp_direction) {\n        return {\n            \"x\": this.x+warp_direction.x,\n            \"y\": this.y+warp_direction.y,\n            \"z\": this.z+warp_direction.z,\n        }\n    }\n}\n","import React from 'react';\n\nexport function download(filename, text) {\n  let element = document.createElement('a');\n  element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n  element.setAttribute('download', filename);\n\n  element.style.display = 'none';\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n}\n\nexport function getSafeFileName(string) {\n    return string.replace(/[^a-z0-9]/gi, '_').toLowerCase();\n}\n\nexport class JSONDownloadButton extends React.Component {\n    downloadJSON() {\n        let downloadInfo = this.props.getDownloadInfo();\n        download(getSafeFileName(downloadInfo.filename)+\".json\", JSON.stringify(downloadInfo.data));\n    }\n\n    render() {\n        return(\n            <button onClick={()=>this.downloadJSON()} className={this.props.className}>\n                {this.props.title}\n            </button>\n        );\n    }\n}\n\nexport class JSONUploadButton extends React.Component {\n    handleUpload() {\n        let fr = new FileReader();\n        fr.readAsText(document.getElementById(this.props.id).files[0]);\n        fr.onload = function(oFREvent) {\n            this.props.handleJSON(JSON.parse(oFREvent.target.result));\n            document.getElementById(this.props.id)\n        }.bind(this);\n    }\n\n    render() {\n        return(\n            <span className=\"control\">\n                <span className=\"file is-small\">\n                    <label className=\"file-label\">\n                        <input\n                            type=\"file\"\n                            id={this.props.id}\n                            className=\"file-input\"\n                            onChange={()=>this.handleUpload()}\n                        />\n                        <span className=\"file-cta\">\n                            <span className=\"file-icon\">\n                                <i className=\"fas fa-upload\"></i>\n                            </span>\n                            <span className=\"file-label\">\n                                Choose a file...\n                            </span>\n                        </span>\n                    </label>\n                </span>\n            </span>\n        )\n    }\n}","import React from 'react';\nimport $ from 'jquery';\nimport ls from \"local-storage\";\n\nimport {\n    planet_data,\n    system_data,\n} from '../data/tile_data.js';\nimport default_layouts from '../data/default_layouts.json';\n\nimport {\n    Map,\n    MapSpace,\n    SystemBox,\n    PlanetBox,\n    System,\n} from \"../map-logic\";\n\nwindow.jQuery = $;\n\nexport class BaseEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.planet_box = new PlanetBox(planet_data);\n        this.system_box = new SystemBox(system_data, this.planet_box);\n        this.default_layouts = default_layouts;\n\n        this.state = {\n            \"map\": null,\n            \"message\": \"\",\n            \"input_title\": \"\",\n            \"saved_data\": ls.get(this.props.storage_key) || [],\n            \"selected_item\": this.getNewStringValue(),\n        };\n    }\n\n    getMessageHtml() {\n        let message = null;\n        if(this.state.message !== null && this.state.message!==\"\") {\n            message = (\n                <div className=\"block content for-message\">\n                      <blockquote>{this.state.message}</blockquote>\n                    <div\n                        className=\"close-button\"\n                        onClick={()=>this.setNoMessage()}\n                    >\n                        <i className=\"fa fa-window-close fa-2x\"></i>\n                    </div>\n                </div>\n            );\n        }\n        return message;\n    }\n\n    setNoMessage() {\n        this.setState({\"message\": null});\n    }\n\n    componentWillUnmount() {\n        this.props.sendStateBeforeDeath(this.state);\n    }\n\n    setMap(new_map) {\n        this.setState({\"map\": new_map});\n    }\n\n    getLayoutFromJSON(data) {\n        let new_map = new Map(false);\n        for(let one_space_data of data) {\n            let space_system = null;\n            if(one_space_data.system!==null) {\n                space_system = new System(one_space_data.system, this.planet_box);\n            }\n            new_map.spaces.push(new MapSpace(\n                one_space_data.x,\n                one_space_data.y,\n                one_space_data.z,\n                one_space_data.warp_spaces,\n                one_space_data.type,\n                space_system,\n            ));\n        }\n        return new_map;\n    }\n\n    getJSONDataFromSpaces(spaces) {\n        let spaces_data = [];\n        for(let one_space of spaces) {\n            let space_data = Object.assign({}, one_space, {\"system\": null});\n            if(one_space.system !== null) {\n                let system_data = Object.assign({}, one_space.system, {\"planets\":[]});\n                for(let one_planet of one_space.system.planets) {\n                    system_data.planets.push(one_planet.name);\n                }\n                space_data.system = system_data;\n            }\n            spaces_data.push(space_data);\n        }\n        return spaces_data;\n    }\n\n    getCurrentLayoutJSON() {\n        let l_title = \"Untitled Layout\";\n        if($('#layout-title').val() !== '') {\n            l_title = $('#layout-title').val();\n        }\n        return {\n            \"title\": l_title,\n            \"data\": this.getJSONDataFromSpaces(this.state.map.spaces),\n        };\n    }\n\n    getCurrentLayoutJSONFileInfo() {\n        let data = this.getCurrentLayoutJSON();\n        this.setState({\"message\": \"\"});\n        return {\n            \"filename\": data.title,\n            \"data\": [data]\n        };\n    }\n\n    getAllLayoutJSONFileInfo() {\n        this.setState({\"message\": \"\"});\n        let data = ls.get(this.props.storage_key) || [];\n        return {\n            \"filename\": \"All \"+this.props.subject_plural,\n            \"data\": data\n        };\n    }\n\n    setLayout(data, selected_item=\"new\", new_map=null) {\n        if(new_map===null) new_map = this.getLayoutFromJSON(data.data);\n        let loadedTitle = data.title;\n        let new_message = this.props.subject+\" '\"+loadedTitle+\"' displayed.\";\n        this.setMap(new_map);\n        this.setState({\n            \"message\": new_message,\n            \"input_title\": loadedTitle,\n            \"selected_item\": selected_item.toString(),\n        });\n    }\n\n    addLayoutsFromJSON(data) {\n        if(data.length>0) {\n            let saved_data = Object.assign([], this.state.saved_data);\n            for(let dataToSave of data) {\n                saved_data.push(dataToSave);\n            }\n            ls.set(this.props.storage_key, saved_data);\n            this.setLayout(saved_data[saved_data.length-1], saved_data.length-1);\n            let new_map = this.getLayoutFromJSON(saved_data[saved_data.length-1].data);\n            this.setMap(new_map);\n            this.setState({\n                \"saved_data\": ls.get(this.props.storage_key) || [],\n                \"message\": \"Layouts loaded.\",\n                \"selected_item\": saved_data.length-1,\n                \"input_title\": saved_data[saved_data.length-1].title,\n            });\n        } else {\n            this.setState({\"message\": \"There were no \"+this.props.subject_plural+\" to load.\"})\n        }\n    }\n\n    getSelectValue() {\n        let int_select = document.getElementById(\"layout-select\");\n        return int_select.options[int_select.selectedIndex].value;\n    }\n\n    saveCurrent() {\n        let dataToSave = this.getCurrentLayoutJSON();\n        let currentIndex = this.getSelectValue();\n        let saved_data = Object.assign([], this.state.saved_data);\n        let new_selected = saved_data.length;\n        if(\n            currentIndex.split(\"_\")[0] === \"new\" ||\n            currentIndex.split(\"_\")[0] === \"newc\"\n        ) {\n            saved_data.push(dataToSave);\n        } else {\n            saved_data[parseInt(currentIndex)] = dataToSave;\n            new_selected = parseInt(currentIndex);\n        }\n        ls.set(this.props.storage_key, saved_data);\n        this.setState({\n            \"selected_item\": new_selected.toString(),\n            \"saved_data\": ls.get(this.props.storage_key) || [],\n            \"message\": this.props.subject+\" '\"+dataToSave.title+\"' saved.\",\n        });\n    }\n\n    deleteCurrent() {\n        let currentIndex = this.getSelectValue();\n        let saved_data = Object.assign([], this.state.saved_data);\n        let toDel = saved_data.splice(parseInt(currentIndex), 1)[0];\n        ls.set(this.props.storage_key, saved_data);\n        this.setMap(this.getNewLayout());\n        this.setState({\n            \"input_title\": \"\",\n            \"selected_item\": this.getNewStringValue(),\n            \"message\": this.props.subject+\" '\"+toDel.title+\"' deleted.\",\n            \"saved_data\": ls.get(this.props.storage_key) || [],\n        });\n    }\n\n    deleteAll() {\n        ls.remove(this.props.storage_key);\n        this.setMap(this.getNewLayout());\n        this.setState({\n            \"saved_data\": ls.get(this.props.storage_key) || [],\n            \"selected_item\": this.getNewStringValue(),\n            \"input_title\": \"\",\n            \"message\": \"All saved \"+this.props.subject_plural+\" have been deleted.\",\n            \"bank_systems\": this.syncBankSystems(this.getNewLayout()),\n        });\n    }\n}","export function compareByID(a, b) {\n    if(a.id > b.id) {\n        return 1;\n    } else if(a.id < b.id) {\n        return -1;\n    }\n    return 0;\n}\n\nexport function shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n}\n\n","import React from 'react';\nimport $ from 'jquery';\nimport ls from \"local-storage\";\n\nimport {WORMHOLES} from \"../data/tile_data\";\nimport default_variables from '../data/default_evaluators.json';\nimport map_string_order from '../data/map_string_order.json';\n\nimport {getObjFromCoord, SystemBox} from \"../map-logic\";\nimport {\n    SYSTEM_FORMATS,\n    MapComponent,\n    MAP_SPACE_TYPES,\n    SystemBankComponent\n} from \"../map-components\";\nimport {\n    JSONDownloadButton,\n    JSONUploadButton,\n} from \"../download-helpers\";\nimport {BaseEditor} from \"./base-editor\";\nimport {\n    shuffle,\n    compareByID,\n} from \"../utilities\";\n\nwindow.jQuery = $;\nconst LOOPS_TO_TRY = 10000;\n\nexport class MapEditor extends BaseEditor {\n    constructor(props) {\n        super(props);\n        let starting_layout = this.getLayoutFromJSON(this.default_layouts[0].data);\n        this.state.map = starting_layout;\n        this.state.selected_bank_system = null;\n        this.state.system_format = SYSTEM_FORMATS.STREAMLINED_WITH_NAME;\n        this.state.draggedSystem = null;\n        this.state.option_pair_wormholes = true;\n        this.state.option_include_all_wormholes = true;\n        this.state.target_blue_total = \"random\";\n        this.state.bank_systems = this.syncBankSystems(starting_layout, true, true);\n        this.state.eval_option=\"default_0\";\n        this.state.eval_variables=default_variables[0];\n        this.state.home_values = {};\n        this.state.balance_difference = null;\n        this.state.map_string = \"\";\n        this.state.balance_options = {\n            \"dont_move_wormholes\": false,\n            \"dont_move_anomalies\": false,\n            \"dont_move_empty\": false,\n        };\n        this.state.include_expansion_systems = true;\n\t\tthis.state.include_base_systems = true;\n        this.state.long_op = false;\n        if(this.props.state_to_import) {\n            let matching_options = this.getOptions().filter(option => option.index === this.props.state_to_import.selected_item);\n            let matching_evals = this.getEvalOptions().filter(option => option.index === this.props.state_to_import.eval_option);\n            if (matching_options.length > 0 && matching_evals.length > 0) {\n                this.state = this.props.state_to_import;\n            }\n        }\n    }\n\n    setMap(new_map, home_values=null, balance_difference=null, eval_var=null) {\n        if(new_map.isComplete()) {\n            if(home_values===null) {\n                if(eval_var===null) eval_var = this.state.eval_variables;\n                home_values = this.getHomeValues(new_map, eval_var);\n            }\n            if(balance_difference===null) {\n                balance_difference = this.getBalanceDifference(home_values);\n            }\n        } else {\n            home_values = {};\n            balance_difference = null;\n        }\n        this.setState({\n            \"map\": new_map,\n            \"bank_systems\": this.syncBankSystems(new_map),\n            \"home_values\": home_values,\n            \"balance_difference\": balance_difference,\n            \"map_string\": this.getMapString(new_map),\n        });\n    }\n\n    syncBankSystems(map, include_expansion_systems=null, include_base_systems=null) {\n        if(include_expansion_systems===null) include_expansion_systems = this.state.include_expansion_systems;\n\t\tif(include_base_systems===null) include_base_systems = this.state.include_base_systems;\n        let bank_systems = new SystemBox([], []);\n        for(let system of this.system_box.systems) {\n            if(\n                (\n                    map===null\n                    || !map.containsSystem(system.id)\n                )\n                && (\n                    system.id<59\n                    || include_expansion_systems\n                )\n                && (\n                    system.id>=59\n                    || include_base_systems\n                )\n            ) {\n                 bank_systems.systems.push(system);\n             }\n        }\n        bank_systems.systems.sort(compareByID);\n        return bank_systems;\n    }\n\n    setActiveBankSystem(system) {\n        this.setState({\"selected_bank_system\": system});\n    }\n\n    handleSelectChange() {\n        let new_value = this.getSelectValue();\n        let new_check = this.getSelectNewMapValue();\n        if(!(new_check === null)) {\n            if(this.getSelectNewMapType() === \"newc\") {\n                this.loadCustomLayout(new_check);\n            } else {\n                this.loadDefault(new_check);\n            }\n        } else {\n            let valIndex = parseInt(new_value);\n            this.setLayout(this.state.saved_data[valIndex], new_value);\n        }\n    }\n\n    handleEvalChange(value) {\n        let e_kind = value.split(\"_\")[0];\n        let e_index = value.split(\"_\")[1];\n        let e_var = null;\n        if(e_kind===\"default\") {\n            e_var = default_variables[e_index];\n        } else {\n            e_var = ls.get(this.props.eval_storage_key)[e_index];\n        }\n        this.setState({\n            \"eval_option\": value,\n            \"eval_variables\": e_var,\n        });\n        this.setMap(this.state.map, null, null, e_var);\n    }\n\n    getSelectNewMapValue(selected_item=null) {\n        let new_value = selected_item;\n        if(new_value===null) {\n            new_value = this.getSelectValue();\n        }\n        new_value = new_value.toString();\n        let new_check = new_value.split(\"_\");\n        if(\n            new_check.length===2\n            &&\n            (new_check[0]===\"new\"||new_check[0]===\"newc\")) {\n            return(parseInt(new_check[1]));\n        }\n        return null;\n    }\n\n    getSelectNewMapType() {\n        return this.getSelectValue().split(\"_\")[0];\n    }\n\n    getNewStringValue() {\n        if(!this.state) return \"new_0\";\n        if(this.state.selected_item.toString().substr(0, 3)===\"new\") return this.state.selected_item;\n        return \"new_0\";\n    }\n\n    isSelectNew(selected_item=null) {\n        return this.getSelectNewMapValue(selected_item)!==null;\n    }\n\n    handleFormatDisplayChange() {\n        let int_select = document.getElementById(\"select-system-display\");\n        this.setState({\"system_format\": parseInt(int_select.options[int_select.selectedIndex].value)});\n    }\n\n    onSelectedSystemDrag(event) {\n        this.setState({\n          draggedSystem: this.state.selected_bank_system,\n          message: \"\",\n        });\n    }\n\n    onSystemDrag(event, system) {\n        this.setState({\n          draggedSystem: system,\n          message: \"\",\n        });\n    }\n\n    onSystemDragEnd(event) {\n        this.setState({\n          draggedSystem: null,\n          message: \"\",\n        });\n    }\n\n    onSystemDropped(event, space_index) {\n        if(this.state.draggedSystem !== null) {\n            let new_map = this.state.map.makeCopy();\n            let selected_bank_system = this.state.selected_bank_system;\n            let is_changed = false;\n            if(space_index !== null) {\n                let space = new_map.spaces[space_index];\n                if(space.type === MAP_SPACE_TYPES.OPEN) {\n                    if(this.state.selected_bank_system !== null && this.state.selected_bank_system.id === this.state.draggedSystem.id) {\n                        selected_bank_system = null;\n                    }\n                    let old_space = new_map.getSpaceBySystemID(this.state.draggedSystem.id);\n                    if(old_space) {\n                        old_space.type = MAP_SPACE_TYPES.OPEN;\n                        old_space.system = null;\n                    }\n                    space.system = this.state.draggedSystem;\n                    space.type = MAP_SPACE_TYPES.SYSTEM;\n                    is_changed = true;\n                } else if(space.type === MAP_SPACE_TYPES.SYSTEM && !space.system.isMecatolRexSystem()) {\n                    let replaced_system = space.system;\n                    if (selected_bank_system !== null && selected_bank_system.id === this.state.draggedSystem.id) {\n                        selected_bank_system = replaced_system;\n                    } else {\n                        new_map.getSpaceBySystemID(this.state.draggedSystem.id).system = replaced_system;\n                    }\n                    space.system = this.state.draggedSystem;\n                    is_changed = true;\n                }\n            } else {\n                let old_space = new_map.getSpaceBySystemID(this.state.draggedSystem.id);\n                if(old_space) {\n                    selected_bank_system = old_space.system;\n                    old_space.type = MAP_SPACE_TYPES.OPEN;\n                    old_space.system = null;\n                    is_changed = true;\n                }\n            }\n\n            if(is_changed) {\n                this.setMap(new_map);\n                this.setState({\"selected_bank_system\": selected_bank_system,});\n            }\n            this.onSystemDragEnd(event);\n        }\n    }\n\n    handleIncludeWormholesChange() {\n        let isChecked = document.getElementById(\"require-all-wormholes\").checked;\n        this.setState(\n            {\"option_include_all_wormholes\": isChecked}\n        );\n    }\n\n    handlePairWormholesChange() {\n        let isChecked = document.getElementById(\"pair-wormholes\").checked;\n        this.setState(\n            {\"option_pair_wormholes\": isChecked}\n        );\n    }\n\n    handleTargetRatioChange() {\n        let int_select = document.getElementById(\"target-ratio\");\n        let int_value = int_select.options[int_select.selectedIndex].value\n        if(int_value !== \"random\") int_value = parseInt(int_value);\n        this.setState({\"target_blue_total\": int_value});\n    }\n\n    loadDefault(index) {\n        let toLoad = this.default_layouts[index];\n        this.setLayout(toLoad, \"new_\"+index);\n        let loadedTitle = toLoad.title;\n        let new_message = \"Blank map '\"+loadedTitle+\"' displayed.\";\n        this.setState({\n            \"message\": new_message,\n            \"input_title\": loadedTitle,\n        });\n    }\n\n    loadCustomLayout(index) {\n        let toLoad = ls.get(this.props.layout_storage_key)[index];\n        let new_map = this.getLayoutFromJSON(toLoad.data);\n        let loadedTitle = toLoad.title;\n        let new_message = \"Custom layout '\"+loadedTitle+\"' displayed.\";\n        this.setMap(new_map);\n        this.setState({\n            \"message\": new_message,\n            \"input_title\": loadedTitle,\n            \"selected_item\": \"newc_\"+index,\n        });\n    }\n\n    getNewLayout() {\n        let toLoad = this.default_layouts[0];\n        let new_map = this.getLayoutFromJSON(toLoad.data);\n        return new_map;\n    }\n\n    getMapString(map = this.state.map) {\n        let final_string = \"\";\n        let is_first = \"\";\n        let coord_order = map_string_order.slice();\n        if(map.spaces.length<=37) coord_order.splice(36, 24);\n        for(let one_coor of coord_order) {\n            let one_space = getObjFromCoord(one_coor, map.spaces);\n            if(one_space && one_space.type===MAP_SPACE_TYPES.SYSTEM && one_space.system) {\n                final_string+=is_first+one_space.system.id;\n            } else {\n                final_string+=is_first+\"0\";\n            }\n            is_first = \" \";\n        }\n        return final_string;\n    }\n\n    loadMapFromString(map_string = this.state.map_string) {\n        let new_map = this.state.map.makeCopy();\n        let new_bank = this.state.bank_systems;\n        let id_list = map_string.split(\" \");\n        let coord_list = map_string_order.slice();\n        if(id_list.length<=37) coord_list.splice(36, 24);\n        for(let [index, one_id_string] of id_list.entries()) {\n            let one_id = parseInt(one_id_string);\n            if(one_id!==0) {\n                let one_system = new_bank.getSystemByID(one_id);\n                if(!one_system) {\n                    let one_system_space = new_map.getSpaceBySystemID(one_id);\n                    if(!one_system_space) {\n                        this.setState({\"message\":\"Space not found.\"});\n                        return;\n                    }\n                    one_system = one_system_space.system;\n                    one_system_space.type = MAP_SPACE_TYPES.OPEN;\n                    one_system_space.system = null;\n                    new_bank = this.syncBankSystems(new_map);\n                }\n                let new_space = getObjFromCoord(coord_list[index], new_map.spaces);\n                if(!new_space) {\n                    this.setState({\"message\":\"Invalid: Too many systems listed.\"});\n                    return;\n                }\n                if(new_space.type!==MAP_SPACE_TYPES.OPEN && new_space.type!==MAP_SPACE_TYPES.SYSTEM) {\n                    this.setState({\"message\":\"Invalid: Placing system on improper space.\"});\n                    return;\n                }\n                if(new_space.type===MAP_SPACE_TYPES.SYSTEM && new_space.system.isMecatolRexSystem()) {\n                    this.setState({\"message\":\"Invalid: Systems on top of Mecatol Rex.\"});\n                    return;\n                }\n                if(new_space.type===MAP_SPACE_TYPES.OPEN) {\n                    new_space.type = MAP_SPACE_TYPES.SYSTEM;\n                }\n                new_space.system = one_system;\n                new_bank = this.syncBankSystems(new_map);\n            }\n        }\n        this.setState({\"message\": \"Map string loaded.\"});\n        this.setMap(new_map);\n    }\n\n    clickedSpace(index) {\n        let newState = Object.assign({},{\n            \"message\": \"\",\n            \"selected_bank_system\": this.state.selected_bank_system,\n        });\n        let new_map = this.state.map.makeCopy();\n        let clickedSpace = new_map.spaces[index];\n        let isChanged = false;\n\n        switch(clickedSpace.type) {\n            case MAP_SPACE_TYPES.OPEN:\n                if(newState.selected_bank_system !== null) {\n                    clickedSpace.system = newState.selected_bank_system;\n                    clickedSpace.type = MAP_SPACE_TYPES.SYSTEM;\n                    newState.selected_bank_system = null;\n                    isChanged = true;\n                }\n                break;\n            case MAP_SPACE_TYPES.SYSTEM:\n                if(!clickedSpace.system.isMecatolRexSystem()) {\n                    if(newState.selected_bank_system !== null) {\n                        let replacement_system = newState.selected_bank_system;\n                        newState.selected_bank_system = clickedSpace.system;\n                        clickedSpace.system = replacement_system;\n                        isChanged = true;\n                    } else {\n                        newState.selected_bank_system = clickedSpace.system;\n                        clickedSpace.system = null;\n                        clickedSpace.type = MAP_SPACE_TYPES.OPEN;\n                        isChanged = true;\n                    }\n                }\n                break;\n            default:\n                break;\n        }\n\n        if(isChanged) {\n            this.setState(newState);\n            this.setMap(new_map);\n        }\n\n    }\n\n    autoCompleteStart() {\n        if(!this.state.long_op) {\n            this.setState({\n                    \"message\": \"Thinking...\",\n                    \"long_op\": true,\n                },\n                () => {\n                    setTimeout(this.autoComplete.bind(this), 1);\n                }\n            );\n        }\n    }\n\n    autoComplete() {\n        let map_history = [{\n            \"map\": this.state.map.makeCopy(this.planet_box),\n            \"system_box\": this.state.bank_systems.makeCopy(),\n        }];\n        let gotamap = true;\n        while(!map_history[map_history.length-1].map.isComplete()) {\n            map_history = this._autoCompleteSteps(map_history, 1);\n            if(map_history===false) {\n                gotamap=false;\n                break;\n            }\n        }\n        let message = \"Unable to find a legal completion of this map.\";\n        if(gotamap) {\n            this.setMap(map_history[map_history.length-1].map);\n            message = \"Map completed randomly.\";\n            this.setState({\n                \"message\": message,\n                \"selected_bank_system\": null,\n                \"long_op\": false,\n            });\n        }\n    }\n\n    _autoCompleteSteps(current_history, steps_forward, current_try_total=0, backwards_length=null) {\n        if(backwards_length===null) backwards_length=current_history.length;\n        let starting_length = current_history.length;\n        for(let tries=current_try_total; tries<LOOPS_TO_TRY; tries++) {\n            let new_history = this._addOneSystem(current_history[current_history.length-1]);\n            if(!(new_history===false)) {\n                current_history.push(new_history);\n                if(current_history.length >= starting_length+steps_forward) {\n                    return current_history;\n                } else {\n                    return this._autoCompleteSteps(current_history, steps_forward-1, tries, backwards_length);\n                }\n            }\n        }\n        let steps_forward_add = 0;\n        while(current_history.length>=backwards_length) {\n            steps_forward_add++;\n            current_history.pop();\n        }\n        if(current_history.length===0) {\n            return false;\n        }\n        return this._autoCompleteSteps(\n            current_history,\n            steps_forward+steps_forward_add,\n            0,\n            backwards_length-1);\n    }\n\n    _addOneSystem(newest_history) {\n        let avail_sys_pool = [];\n        let system_box = newest_history.system_box;\n        let map = newest_history.map;\n        for(let one_sys of system_box.systems) {\n            let can_add = true;\n            if (\n                this.state.option_include_all_wormholes &&\n                one_sys.wormhole === null &&\n                system_box.getWormholeSystems().length >= map.getOpenSpacesTotal()\n            ) {\n                can_add = false;\n            } else {\n                if (this.state.option_pair_wormholes) {\n                    let total_needed = 0;\n                    let b_holes = system_box.getWormholeSystems(WORMHOLES.BETA).length;\n                    let a_holes = system_box.getWormholeSystems(WORMHOLES.ALPHA).length;\n                    if (b_holes === 1) total_needed++;\n                    if (a_holes === 1) total_needed++;\n                    if (\n                        total_needed >= map.getOpenSpacesTotal()\n                        &&\n                        (\n                            one_sys.wormhole === null\n                            ||\n                            (one_sys.wormhole !== WORMHOLES.BETA && a_holes !== 1)\n                            ||\n                            (one_sys.wormhole !== WORMHOLES.ALPHA && b_holes !== 1)\n                        )\n                    ) can_add = false;\n                }\n                if (can_add) avail_sys_pool.push(one_sys);\n            }\n        }\n        if(this.state.target_blue_total!==\"random\") {\n            let target_ratio = this.state.target_blue_total/(map.getPossibleSystemTotal()-this.state.target_blue_total);\n            let current_ratio = map.getBlueSystemTotal()/map.getRedSystemTotal();\n            if(target_ratio<current_ratio) {\n                let replacement_pool = [];\n                for(let one_sys of avail_sys_pool) {\n                    if(one_sys.isRed()) replacement_pool.push(one_sys);\n                }\n                if(replacement_pool.length>0) avail_sys_pool = replacement_pool;\n            } else if(target_ratio>current_ratio) {\n                let replacement_pool = [];\n                for(let one_sys of avail_sys_pool) {\n                    if(one_sys.isBlue()) replacement_pool.push(one_sys);\n                }\n                if(replacement_pool.length>0) avail_sys_pool = replacement_pool;\n            }\n        }\n        let chosen_system = avail_sys_pool[Math.floor(Math.random() * avail_sys_pool.length)];\n        let avail_space_pool = [];\n        for(let [index, one_space] of map.spaces.entries()) {\n            if(one_space.type===MAP_SPACE_TYPES.OPEN) avail_space_pool.push(index);\n        }\n        let chosen_space_index = avail_space_pool[Math.floor(Math.random() * avail_space_pool.length)];\n        let new_map = map.makeCopy();\n        new_map.spaces[chosen_space_index].type = MAP_SPACE_TYPES.SYSTEM;\n        new_map.spaces[chosen_space_index].system = chosen_system;\n        let new_box = this.syncBankSystems(new_map);\n\n        if(new_map.isLegal()) {\n            return {\n                \"map\": new_map,\n                \"system_box\": new_box,\n            }\n        } else {\n            return false;\n        }\n    }\n\n    getHomeValues(map = this.state.map, evars = this.state.eval_variables) {\n        let home_values = {};\n        for(let [index, one_space] of map.spaces.entries()) {\n            if(one_space.type === MAP_SPACE_TYPES.HOME) {\n                home_values[index.toString()] = map.getHomeValue(\n                    one_space, evars,\n                );\n            }\n        }\n        return home_values;\n    }\n\n    getBalanceDifference(home_values = this.state.home_values) {\n        let max = null;\n        let min = null;\n        for(let one_home_key in home_values) {\n            if(home_values.hasOwnProperty(one_home_key)) {\n                if (max === null || home_values[one_home_key] > max) max = home_values[one_home_key];\n                if (min === null || home_values[one_home_key] < min) min = home_values[one_home_key];\n            }\n        }\n        return max-min;\n    }\n\n    handleBalanceOptionChange(which_option) {\n        let options = Object.assign({}, this.state.balance_options);\n        options[which_option] = !options[which_option];\n        this.setState({\"balance_options\": options});\n    }\n\n    improveBalanceStart() {\n        if(!this.state.long_op) {\n            this.setState({\n                    \"message\": \"Thinking...\",\n                    \"long_op\": true,\n                },\n                ()=>{\n                    setTimeout(this.improveBalance.bind(this), 1);\n                }\n            );\n        }\n    }\n\n    improveBalance() {\n        return new Promise((resolve)=> {\n            let map = this.state.map;\n            let eligible_system_spaces = [];\n            for (let [index, one_space] of map.spaces.entries()) {\n                if (one_space.type === MAP_SPACE_TYPES.SYSTEM) {\n                    if (\n                        !one_space.system.isMecatolRexSystem()\n                        &&\n                        (!this.state.balance_options.dont_move_wormholes\n                            || one_space.system.wormhole === null)\n                        &&\n                        (!this.state.balance_options.dont_move_anomalies\n                            || one_space.system.anomaly === null)\n                        &&\n                        (!this.state.balance_options.dont_move_empty\n                            || one_space.system.wormhole !== null\n                            || one_space.system.anomaly !== null\n                            || one_space.system.planets.length > 0)\n                    ) eligible_system_spaces.push(index);\n                }\n            }\n            shuffle(eligible_system_spaces);\n            let found_it = false;\n            let new_map = null;\n            let new_hv = null;\n            let new_diff = null;\n            for(let a=0; a<eligible_system_spaces.length; a++) {\n                for(let b=0; b<eligible_system_spaces.length; b++) {\n                    if(\n\t\t\t\t\t\ta!==b \n\t\t\t\t\t\t&&\n\t\t\t\t\t\tthis.state.map.spaces[eligible_system_spaces[a]].system.evaluate(this.state.eval_variables)\n\t\t\t\t\t\t!== this.state.map.spaces[eligible_system_spaces[b]].system.evaluate(this.state.eval_variables)\n\t\t\t\t\t) {\n                        new_map = this.state.map.makeCopy();\n                        let replaced_system = new_map.spaces[eligible_system_spaces[b]].system;\n                        new_map.spaces[eligible_system_spaces[b]].system = new_map.spaces[eligible_system_spaces[a]].system;\n                        new_map.spaces[eligible_system_spaces[a]].system = replaced_system;\n                        if (new_map.isLegal()) {\n                            new_hv = this.getHomeValues(new_map);\n                            new_diff = this.getBalanceDifference(new_hv);\n                            if (new_diff < this.state.balance_difference) {\n                                found_it = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n                if(found_it) break;\n            }\n            if (found_it) {\n                this.setMap(new_map, new_hv, new_diff);\n                this.setState({\n                    \"message\": \"Balance gap has been improved.\",\n                    \"long_op\": false,\n                });\n            } else {\n                this.setState({\n                    \"message\": \"Failed to improve balance gap.\",\n                    \"long_op\": false,\n                });\n            }\n        });\n    }\n\n    getEvalOptions() {\n        let options = [];\n        for(let [index, one_default] of default_variables.entries()) {\n            options.push({\n                \"index\": \"default_\"+index,\n                \"title\": one_default.title,\n            })\n        }\n        let evals = ls.get(this.props.eval_storage_key) || [];\n        for(let [index, one_saved] of evals.entries() || []) {\n            options.push({\n                \"index\": \"custom_\"+index.toString(),\n                \"title\": one_saved.title,\n            });\n        }\n        return options;\n    }\n\n    getOptions() {\n        let options = [];\n        for(let [index, one_default] of this.default_layouts.entries()) {\n            options.push({\n                \"index\": \"new_\"+index,\n                \"title\": \"New from default layout \"+one_default.title,\n            });\n        }\n        for(let [index, one_custom_l] of (ls.get(this.props.layout_storage_key) || []).entries()) {\n            if(this.getLayoutFromJSON(one_custom_l.data).areWarpsLogical()) {\n                options.push({\n                    \"index\": \"newc_\" + index,\n                    \"title\": \"New from custom layout \" + one_custom_l.title,\n                });\n            }\n        }\n        for(let [index, one_saved] of this.state.saved_data.entries()) {\n            options.push({\n                \"index\": index,\n                \"title\": one_saved.title\n            });\n        }\n        return options;\n    }\n\n    toggleExpansion() {\n        this.setState({\n            include_expansion_systems: !this.state.include_expansion_systems,\n            bank_systems: this.syncBankSystems(this.state.map, !this.state.include_expansion_systems, this.state.include_base_systems),\n        });\n    }\n\t\n    toggleBaseSystems() {\n        this.setState({\n            include_base_systems: !this.state.include_base_systems,\n            bank_systems: this.syncBankSystems(this.state.map, this.state.include_expansion_systems, !this.state.include_base_systems),\n        });\n    }\n\n    render() {\n        let is_legal = (<label className=\"button is-outlined is-small is-danger\">Illegal</label>);\n        if(this.state.map.isLegal()) is_legal = (<label className=\"button is-small is-outlined is-success\">Legal</label>);\n        let is_complete = (<label className=\"button is-outlined is-small is-danger\">Incomplete</label>);\n        if(this.state.map.isComplete()) is_complete = (<label className=\"button is-small is-outlined is-success\">Complete</label>);\n\n        let options = [];\n        for(let opt of this.getOptions()) {\n            options.push(\n                <option value={opt.index} key={opt.index}>{opt.title}</option>\n            );\n        }\n\n        let eval_options = [];\n        for(let opt of this.getEvalOptions()) {\n            eval_options.push(\n                <option value={opt.index} key={opt.index}>{opt.title}</option>\n            );\n        }\n\n        let auto_complete_ratios = [(<option value=\"random\" key=\"random\">Blue/Red Target Ratio: Random</option>)];\n        let red_total = this.state.map.getRedSystemTotal();\n        let blue_total = this.state.map.getBlueSystemTotal();\n        let open_spaces = this.state.map.getOpenSpacesTotal();\n        let blue_avail = this.state.bank_systems.getBlueSystemTotal();\n        let red_avail = this.state.bank_systems.getRedSystemTotal();\n        for(let s=0; s<=open_spaces; s++) {\n            if(s<=blue_avail && open_spaces-s<=red_avail) {\n                auto_complete_ratios.push((\n                    <option\n                        value={s+blue_total}\n                        key={s+blue_total}\n                    >\n                        Blue/Red Target Ratio: {s+blue_total}/{open_spaces-s+red_total}\n                    </option>\n                ));\n            }\n\n        }\n\n        let bal_diff =  null;\n        if(this.state.balance_difference!==null) {\n            bal_diff = (<p className=\"control\"><label className=\"label\">Balance Gap: {this.state.balance_difference}</label></p>);\n        }\n\n\n        return(\n            <div className=\"block\">\n                <h2 className=\"title is-size-4\">Map Editor</h2>\n                <div className=\"block map-lab-control-panel\">\n                    <div className=\"field is-horizontal\">\n                        <div className=\"field-label\">\n                            <label className=\"label\">Saved/Defaults:</label>\n                        </div>\n                        <div className=\"field-body\">\n                            <div className=\"field is-grouped is-grouped-multiline\">\n                                <p className=\"control\">\n                                    <span className=\"select is-small\">\n                                        <select id=\"layout-select\" value={this.state.selected_item}\n                                                onChange={() => this.handleSelectChange()}>\n                                            {options}\n                                        </select>\n                                    </span>\n                                </p>\n                                <p className=\"control\">\n                                    <JSONDownloadButton\n                                        title=\"Download All\"\n                                        getDownloadInfo={() => this.getAllLayoutJSONFileInfo()}\n                                        className=\"button is-small\"\n                                    />\n                                </p>\n                                <p className=\"control\">\n                                    <button onClick={() => this.deleteAll()} className=\"button is-small\">Delete All\n                                    </button>\n                                </p>\n                                <JSONUploadButton\n                                    id=\"layout-json-upload\"\n                                    title=\"Upload\"\n                                    handleJSON={(data) => this.addLayoutsFromJSON(data)}\n                                    className=\"button is-small\"\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"field is-horizontal\">\n                        <div className=\"field-label\">\n                            <label className=\"label\">Map Title:</label>\n                        </div>\n                        <div className=\"field-body\">\n                            <div className=\"field is-grouped is-grouped-multiline\">\n                                <p className=\"control\">\n                                    <input\n                                        className=\"input is-small\"\n                                        type=\"text\"\n                                        id=\"layout-title\"\n                                        value={this.state.input_title}\n                                        onChange={function() {\n                                            this.setState(\n                                                {\n                                                    \"input_title\": document.getElementById(\"layout-title\").value,\n                                                    \"message\": \"\"\n                                                }\n                                            );\n                                        }.bind(this)}\n                                    />\n                                </p>\n                                <p className=\"control\">\n                                    <button className=\"button is-small\" onClick={()=>this.saveCurrent()}>Save</button>\n                                </p>\n                                <p className=\"control\">\n                                    <button className=\"button is-small\" onClick={()=>this.handleSelectChange()}>Reset</button>\n                                </p>\n                                <p className=\"control\">\n                                    <button\n                                        className=\"button is-small\"\n                                        onClick={()=>this.deleteCurrent()}\n                                        disabled={this.isSelectNew(this.state.selected_item)}\n                                    >Delete</button>\n                                </p>\n                                <p className=\"control\">\n                                    <JSONDownloadButton\n                                        title=\"Download\"\n                                        className=\"button is-small\"\n                                        getDownloadInfo={()=>this.getCurrentLayoutJSONFileInfo()}\n                                    />\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"field is-horizontal\">\n                        <div className=\"field-label\">\n                            <label className=\"label\">System Display:</label>\n                        </div>\n                        <div className=\"field-body\">\n                             <div className=\"field is-grouped is-grouped-multiline\">\n                                <p className=\"control\">\n                                    <span className=\"select is-small\">\n                                        <select\n                                            id=\"select-system-display\"\n                                            value={this.state.system_format}\n                                            onChange={()=>this.handleFormatDisplayChange()}\n                                        >\n                                            <option value={SYSTEM_FORMATS.STREAMLINED}>Streamlined</option>\n                                            <option value={SYSTEM_FORMATS.STREAMLINED_WITH_NAME}>Streamlined + Name</option>\n                                            <option value={SYSTEM_FORMATS.COLORBLIND_FRIENDLY}>Colorblind Friendly</option>\n                                            <option value={SYSTEM_FORMATS.COLORBLIND_FRIENDLY_WITH_NAME}>Colorblind Friendly + Name</option>\n                                            <option value={SYSTEM_FORMATS.ID_ONLY}>ID Only</option>\n                                        </select>\n                                    </span>\n                                </p>\n                                <p className=\"control\">\n                                    <label className=\"label\">Map Status:</label>\n                                </p>\n                                <p className=\"control\">\n                                    {is_complete}\n                                </p>\n                                <p className=\"control\">\n                                    {is_legal}\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"field is-horizontal\">\n                        <div className=\"field-label\">\n                            <label className=\"label\">Map String:</label>\n                        </div>\n                        <div className=\"field-body\">\n                            <div className=\"field is-grouped is-grouped-multiline\">\n                                <p className=\"control is-expanded\">\n                                    <input\n                                        className=\"input is-small\"\n                                        type=\"text\"\n                                        id=\"map-string\"\n                                        value={this.state.map_string}\n                                        onChange={function() {\n                                            this.setState(\n                                                {\n                                                    \"map_string\": document.getElementById(\"map-string\").value,\n                                                    \"message\": \"\"\n                                                }\n                                            );\n                                        }.bind(this)}\n                                    />\n                                </p>\n                                <p className=\"control\">\n                                    <button className=\"button is-small\" onClick={()=>this.loadMapFromString()}>\n                                        Load From String\n                                    </button>\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"columns\">\n                    <div className=\"column is-one-fifth-desktop is-narrow-tablet map-controls-column\">\n                        {this.getMessageHtml()}\n                        <div className=\"field\">\n                            <label className=\"label\">Auto-Complete</label>\n                            <p className=\"control\">\n                                <input\n                                    id=\"require-all-wormholes\"\n                                    type=\"checkbox\"\n                                    checked={this.state.option_include_all_wormholes}\n                                    onChange={()=>this.handleIncludeWormholesChange()}\n                                />\n                                <label htmlFor=\"require-all-wormholes\"> Require Wormholes</label>\n                            </p>\n                            <p className=\"control\">\n                                <input\n                                    id=\"pair-wormholes\"\n                                    type=\"checkbox\"\n                                    checked={this.state.option_pair_wormholes}\n                                    onChange={()=>this.handlePairWormholesChange()}\n                                />\n                                <label htmlFor=\"pair-wormholes\"> Pair Wormholes</label>\n                            </p>\n                            <p className=\"control\">\n                                <span className=\"select is-small\">\n                                    <select\n                                        id=\"target-ratio\"\n                                        value={this.state.target_blue_total}\n                                        onChange={()=>this.handleTargetRatioChange()}\n                                    >\n                                        {auto_complete_ratios}\n                                    </select>\n                                </span>\n                            </p>\n                            <p className=\"control\">\n                                <button\n                                    onClick={()=>this.autoCompleteStart()}\n                                    disabled={\n                                        !this.state.map.isLegal()\n                                        || this.state.map.isComplete()\n                                        || this.state.long_op===true\n\t\t\t\t\t\t\t\t\t\t|| this.state.bank_systems.systems.length < this.state.map.getTotalOpen()\n                                    }\n                                    className=\"button is-small is-primary\"\n                                >\n                                    Auto-Complete Map\n                                </button>\n                            </p>\n                        </div>\n                        <div className=\"field\">\n                            <label className=\"label\">Improve Balance</label>\n                            <p className=\"control\">\n                                <span className=\"select is-small\">\n                                    <select id=\"eval-select\" value={this.state.eval_option}\n                                            onChange={(event) => this.handleEvalChange(event.target.value)}>\n                                        {eval_options}\n                                    </select>\n                                </span>\n                            </p>\n                            {bal_diff}\n                            <p className=\"control\">\n                                <input\n                                    id=\"dont-move-wormholes\"\n                                    type=\"checkbox\"\n                                    checked={this.state.balance_options.dont_move_wormholes}\n                                    onChange={()=>this.handleBalanceOptionChange(\"dont_move_wormholes\")}\n                                />\n                                <label htmlFor=\"dont-move-wormholes\"> Lock Wormholes</label>\n                            </p>\n                            <p className=\"control\">\n                                <input\n                                    id=\"dont-move-anomalies\"\n                                    type=\"checkbox\"\n                                    checked={this.state.balance_options.dont_move_anomalies}\n                                    onChange={()=>this.handleBalanceOptionChange(\"dont_move_anomalies\")}\n                                />\n                                 <label htmlFor=\"dont-move-anomalies\"> Lock Anomalies</label>\n                            </p>\n                            <p className=\"control\">\n                                <input\n                                    id=\"dont-move-empty\"\n                                    type=\"checkbox\"\n                                    checked={this.state.balance_options.dont_move_empty}\n                                    onChange={()=>this.handleBalanceOptionChange(\"dont_move_empty\")}\n                                />\n                                <label htmlFor=\"dont-move-empty\"> Lock Empty Spaces</label>\n                            </p>\n                            <p className=\"control\">\n                                <button\n                                    onClick={()=>this.improveBalanceStart()}\n\n                                    disabled={!this.state.map.isComplete() || this.state.long_op===true}\n                                    className=\"button is-small is-primary\"\n                                >\n                                    Improve Balance\n                                </button>\n                            </p>\n                        </div>\n                        <SystemBankComponent\n                            systems={this.state.bank_systems}\n                            include_expansion_systems={this.state.include_expansion_systems}\n                            toggleExpansion={()=>this.toggleExpansion()}\n\t\t\t\t\t\t\tinclude_base_systems={this.state.include_base_systems}\n\t\t\t\t\t\t\ttoggleBaseSystems={()=>this.toggleBaseSystems()}\n                            active_system={this.state.selected_bank_system}\n                            setActiveSystem={(system)=>this.setActiveBankSystem(system)}\n                            system_format={this.state.system_format}\n                            onSelectedSystemDrag={(event)=>this.onSelectedSystemDrag(event)}\n                            onSystemDragEnd={(event)=>this.onSystemDragEnd(event)}\n                            onSystemDropped={(event)=>this.onSystemDropped(event,null)}\n                            eval_variables={this.state.eval_variables}\n                        />\n\t\t\t\t\t\t<div className=\"stats-container\">\n\t\t\t\t\t\t\t<p>Blue/Red: {this.state.map.getBlueSystemTotal()}/{this.state.map.getRedSystemTotal()}</p>\n\t\t\t\t\t\t\t<p>Resources/Influence: {this.state.map.getTotalResources()}/{this.state.map.getTotalInfluence()}</p>\n\t\t\t\t\t\t\t<p>Tech: {this.state.map.getTotalTechSpecialties()}</p>\n\t\t\t\t\t\t\t<p>Traits R/G/B: {this.state.map.getPlanetTraitTotals()}</p>\n\t\t\t\t\t\t</div>\n                    </div>\n                    <div className=\"column map-container\">\n                        <MapComponent\n                            map={this.state.map}\n                            eval_variables={this.state.eval_variables}\n                            system_format={this.state.system_format}\n                            system_box={this.system_box}\n                            clickedSpace={(index)=>this.clickedSpace(index)}\n                            map_class=\"map-map\"\n                            systems_draggable={!this.state.long_op}\n                            onSystemDrag={(event, system)=>this.onSystemDrag(event, system)}\n                            onSystemDragEnd={(event)=>this.onSystemDragEnd(event)}\n                            onSystemDropped={(event, space)=>this.onSystemDropped(event, space)}\n                            home_values={this.state.home_values}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport $ from 'jquery';\n\nimport {warp_configs} from \"../data/warp_data\";\n\nimport {\n    Map,\n    MapSpace,\n    areCoordsInList,\n} from \"../map-logic\";\nimport {\n    SYSTEM_FORMATS,\n    MapComponent,\n    MAP_SPACE_TYPES,\n} from \"../map-components\";\nimport {\n    JSONDownloadButton,\n    JSONUploadButton,\n} from \"../download-helpers\";\nimport {BaseEditor} from \"./base-editor\";\nimport {compareByID} from \"../utilities\";\n\nwindow.jQuery = $;\n\nexport class LayoutEditor extends BaseEditor {\n    constructor(props) {\n        super(props);\n        this.state.map = this.getNewLayout();\n        this.state.show_warps = false;\n        this.state.show_wormholes = false;\n        this.state.show_anomalies = false;\n        if(this.props.state_to_import) {\n            let matching_options = this.getOptions().filter(option => option.index === this.props.state_to_import.selected_item);\n            if (matching_options.length > 0) {\n                this.state = this.props.state_to_import;\n            }\n        }\n    }\n\n    handleSelectChange() {\n        let new_value = this.getSelectValue();\n        if(new_value === \"new\") {\n            this.setNewLayout();\n        } else {\n            let valIndex = parseInt(new_value);\n            this.setLayout(this.state.saved_data[valIndex], new_value);\n        }\n    }\n\n    syncBankSystems(what) {\n        \n    }\n\n    isSelectNew(selected_item=null) {\n        if(selected_item !== null) return selected_item===\"new\";\n        return this.getSelectValue() === \"new\";\n    }\n\n    getNewStringValue() {\n        return \"new\";\n    }\n\n    handleWarpChange() {\n        let isChecked = document.getElementById(\"warp-checkbox\").checked;\n        this.setState({\"show_warps\": isChecked});\n    }\n    handleWormholeChange() {\n        let isChecked = document.getElementById(\"wormhole-checkbox\").checked;\n        this.setState({\"show_wormholes\": isChecked});\n    }\n    handleAnomaliesChange() {\n        let isChecked = document.getElementById(\"anomalies-checkbox\").checked;\n        this.setState({\"show_anomalies\": isChecked});\n    }\n\n    clickedSpace(index) {\n        let new_map = this.state.map.makeCopy();\n        let new_message = \"\";\n        let clickedSpace = new_map.spaces[index];\n        let go_next_type = false;\n\n        switch(clickedSpace.type) {\n            case MAP_SPACE_TYPES.WARP:\n                if(!this.state.show_warps) {\n                    go_next_type=true;\n                    clickedSpace.warp_spaces = null;\n                } else {\n                    clickedSpace.warp_spaces = this._getNextWarp(new_map, clickedSpace);\n                    if(clickedSpace.warp_spaces===null) go_next_type=true;\n                }\n                break;\n            case MAP_SPACE_TYPES.SYSTEM:\n                clickedSpace.system = this._getNextSystem(new_map, clickedSpace);\n                if(clickedSpace.system===null) go_next_type = true;\n                break;\n            default:\n                go_next_type = true;\n                break;\n        }\n        if(go_next_type) {\n            let keep_going = true;\n            while(keep_going) {\n                clickedSpace.type++;\n                if(clickedSpace.type > MAP_SPACE_TYPES.WARP) {\n                    clickedSpace.type = 1;\n                }\n                switch(clickedSpace.type) {\n                    case MAP_SPACE_TYPES.SYSTEM:\n                        clickedSpace.system = this._getNextSystem(new_map, clickedSpace);\n                        if(clickedSpace.system!==null) keep_going = false;\n                        break;\n                    case MAP_SPACE_TYPES.WARP:\n                        if(this.state.show_warps){\n                            clickedSpace.warp_spaces = this._getNextWarp(new_map, clickedSpace);\n                            if(clickedSpace.warp_spaces!==null) keep_going=false;\n                        }\n                        break;\n                    default:\n                        keep_going = false;\n                        break;\n                }\n            }\n\n        }\n        if(!new_map.areWarpsLogical()) {\n            new_message = \"Warps do not yet connect to legal spaces. Layout not usable until warps connect.\";\n        }\n        this.setMap(new_map);\n        this.setState({\"message\": new_message,})\n    }\n\n    loadDefault(index) {\n        let toLoad = this.default_layouts[index];\n        let new_map = this.getLayoutFromJSON(toLoad.data);\n        let loadedTitle = toLoad.title;\n        let new_message = \"Default layout '\"+loadedTitle+\"' displayed.\";\n        this.setMap(new_map);\n        this.setState({\n            \"message\": new_message,\n            \"input_title\": loadedTitle,\n            \"selected_item\": this.getNewStringValue(),\n        });\n    }\n\n    getNewLayout() {\n        let starting_space = new MapSpace(0,0,0);\n        return new Map(true, starting_space, 3);\n    }\n\n    setNewLayout() {\n        let map = this.getNewLayout();\n        this.setMap(map);\n        this.setState({\"selected_item\": this.getNewStringValue(), \"message\": \"\", \"input_title\": \"\"});\n    }\n\n    _getNextWarp(map, space) {\n        let proposed_warp = space.warp_spaces;\n        if(proposed_warp === null) {\n            proposed_warp = 0;\n        } else {\n            proposed_warp++;\n        }\n        while(proposed_warp < warp_configs.length) {\n            let proposed_config = warp_configs[proposed_warp];\n            let is_legal = true;\n            for(let one_warp of proposed_config) {\n                for(let one_coord of one_warp) {\n                    if(!areCoordsInList(\n                        space.getWarpDirectionCoordinates(one_coord),\n                        map.spaces\n                    )) {\n                        is_legal = false;\n                        break;\n                    }\n                }\n            }\n            if(is_legal) {\n                break;\n            }\n            proposed_warp++;\n        }\n        if(proposed_warp >= warp_configs.length) {\n            return null;\n        }\n        return proposed_warp;\n    }\n\n    _getNextSystem(map, space) {\n        let eligible_systems = [];\n        let current_id = 0;\n        if(space.system!==null) current_id=space.system.id;\n        for(let one_system of this.system_box.systems) {\n            if(\n                map.getSpaceBySystemID(one_system.id)===null\n                &&\n                one_system.id>current_id\n                &&\n                (\n                    one_system.isMecatolRexSystem()\n                    ||\n                    (one_system.wormhole!==null && this.state.show_wormholes)\n                    ||\n                    (one_system.anomaly!==null && this.state.show_anomalies)\n                )\n            ) {\n                eligible_systems.push(one_system);\n            }\n        }\n        if(eligible_systems.length===0) return null;\n        eligible_systems.sort(compareByID);\n        return eligible_systems[0];\n    }\n\n    getOptions() {\n        let options = [{\n            \"index\": \"new\",\n            \"title\": \"New Layout\",\n        }];\n        for(let [index, one_saved] of this.state.saved_data.entries()) {\n            options.push({\n                \"index\": index.toString(),\n                \"title\": one_saved.title,\n            });\n        }\n        return options;\n    }\n\n    render() {\n        let options = [];\n        for(let opt of this.getOptions()) {\n            options.push(\n                <option value={opt.index} key={opt.index}>{opt.title}</option>\n            );\n        }\n        let defaults = [];\n        for(let [index, one_default] of this.default_layouts.entries()) {\n            defaults.push(\n                <p className=\"control\" key={index}>\n                    <button\n                        className=\"button is-small is-link\"\n                        onClick={()=>this.loadDefault(index)}\n                        key={\"default_layout_\"+index}\n                    >\n                        {one_default.title}\n                    </button>\n                </p>\n            )\n        }\n\n        return(\n            <div className=\"block\">\n                <h2 className=\"title is-size-4\">Layout Editor</h2>\n                <div className=\"block map-lab-control-panel\">\n                    <div className=\"field is-horizontal\">\n                        <div className=\"field-label\">\n                            <label className=\"label\">Default Layouts:</label>\n                        </div>\n                        <div className=\"field-body\">\n                            <div className=\"field is-grouped is-grouped-multiline\">\n                                {defaults}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"field is-horizontal\">\n                        <div className=\"field-label\">\n                            <label className=\"label\">Saved Layouts:</label>\n                        </div>\n                        <div className=\"field-body\">\n                            <div className=\"field is-grouped is-grouped-multiline\">\n                                <p className=\"control\">\n                                    <span className=\"select is-small\">\n                                        <select\n                                            id=\"layout-select\"\n                                            value={this.state.selected_item}\n                                            onChange={()=>this.handleSelectChange()}\n                                        >\n                                            {options}\n                                        </select>\n                                    </span>\n                                </p>\n                                <p className=\"control\">\n                                    <JSONDownloadButton\n                                        title=\"Download All\"\n                                        getDownloadInfo={()=>this.getAllLayoutJSONFileInfo()}\n                                        className=\"button is-small\"\n                                    />\n                                </p>\n                                <p className=\"control\">\n                                    <button onClick={()=>this.deleteAll()} className=\"button is-small\">\n                                        Delete All\n                                    </button>\n                                </p>\n                                <p className=\"control\">\n                                    <JSONUploadButton\n                                        id=\"layout-json-upload\"\n                                        title=\"Upload\"\n                                        handleJSON={(data)=>this.addLayoutsFromJSON(data)}\n                                        className=\"button is-small\"\n                                    />\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"field is-horizontal\">\n                        <div className=\"field-label\">\n                            <label className=\"label\">Layout Title:</label>\n                        </div>\n                        <div className=\"field-body\">\n                            <div className=\"field is-grouped is-grouped-multiline\">\n                                <p className=\"control\">\n                                    <input\n                                        type=\"text\"\n                                        id=\"layout-title\"\n                                        value={this.state.input_title}\n                                        className=\"input is-small\"\n                                        onChange={function() {\n                                            this.setState(\n                                                {\n                                                    \"input_title\": document.getElementById(\"layout-title\").value,\n                                                    \"message\": \"\"\n                                                }\n                                            );\n                                        }.bind(this)}\n                                    />\n                                </p>\n                                <p className=\"control\">\n                                    <button className=\"button is-small\" onClick={()=>this.saveCurrent()}>Save</button>\n                                </p>\n                                <p className=\"control\">\n                                    <button className=\"button is-small\" onClick={()=>this.handleSelectChange()}>Reset</button>\n                                </p>\n                                <p className=\"control\">\n                                    <button\n                                        onClick={()=>this.deleteCurrent()}\n                                        disabled={this.isSelectNew(this.state.selected_item)}\n                                        className=\"button is-small\"\n                                    >Delete</button>\n                                </p>\n                                <p className=\"control\">\n                                    <JSONDownloadButton\n                                        title=\"Download\"\n                                        getDownloadInfo={()=>this.getCurrentLayoutJSONFileInfo()}\n                                        className=\"button is-small\"\n                                    />\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"columns\">\n                        <div className=\"column is-one-fifth-desktop is-narrow-tablet map-controls-column\">\n                            {this.getMessageHtml()}\n                            <div className=\"field\">\n                                <label className=\"label\">Click Cycle</label>\n                                <p className=\"control\">\n                                    <input\n                                        type=\"checkbox\"\n                                        checked={this.state.show_warps}\n                                        onChange={()=>this.handleWarpChange()}\n                                        id=\"warp-checkbox\"\n                                    />\n                                    <label htmlFor=\"warp-checkbox\"> Include Warps in Click Cycle</label>\n                                </p>\n                                <p className=\"control\">\n                                    <input\n                                        type=\"checkbox\"\n                                        checked={this.state.show_wormholes}\n                                        onChange={()=>this.handleWormholeChange()}\n                                        id=\"wormhole-checkbox\"\n                                    />\n                                    <label htmlFor=\"wormhole-checkbox\"> Include Womholes in Click Cycle</label>\n                                </p>\n                                <p className=\"control\">\n                                    <input\n                                        type=\"checkbox\"\n                                        checked={this.state.show_anomalies}\n                                        onChange={()=>this.handleAnomaliesChange()}\n                                        id=\"anomalies-checkbox\"\n                                    />\n                                    <label htmlFor=\"anomalies-checkbox\"> Include Anomalies in Click Cycle</label>\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"column map-container\">\n                            <MapComponent\n                                map={this.state.map}\n                                system_format={SYSTEM_FORMATS.STREAMLINED}\n                                system_box={this.system_box}\n                                clickedSpace={(index)=>this.clickedSpace(index)}\n                                map_class=\"layout-map\"\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport {PLANET_EVAL_STRATEGIES} from \"./map-logic\";\n\nexport const EVAL_ASPECTS = {\n    \"BASE_PLANET_MOD\": \"BASE_PLANET_MOD\",\n    \"RESOURCES_MULTIPLIER\": \"RESOURCES_MULTIPLIER\",\n    \"INFLUENCE_MULTIPLIER\": \"INFLUENCE_MULTIPLIER\",\n    \"TECH_MOD\": \"TECH_MOD\",\n    \"TECH_PROPULSION_MOD\": \"TECH_PROPULSION_MOD\",\n    \"TECH_WARFARE_MOD\": \"TECH_WARFARE_MOD\",\n    \"TECH_BIOTIC_MOD\": \"TECH_BIOTIC_MOD\",\n    \"TECH_CYBERNETIC_MOD\": \"TECH_CYBERNETIC_MOD\",\n    \"PLANET_STRATEGY\": \"PLANET_STRATEGY\",\n    \"NONZERO_RESOURCES_MOD\": \"NONZERO_RESOURCES_MOD\",\n    \"NONZERO_INFLUENCE_MOD\": \"NONZERO_INFLUENCE_MOD\",\n    \"TRAIT_CULTURAL_MOD\": \"TRAIT_CULTURAL_MOD\",\n    \"TRAIT_HAZARDOUS_MOD\": \"TRAIT_HAZARDOUS_MOD\",\n    \"TRAIT_INDUSTRIAL_MOD\": \"TRAIT_INDUSTRIAL_MOD\",\n    \"SINGLE_PLANET_MOD\": \"SINGLE_PLANET_MOD\",\n    \"MULTI_PLANET_MOD\": \"MULTI_PLANET_MOD\",\n    \"MATCHING_PLANETS_MOD\": \"MATCHING_PLANETS_MOD\",\n    \"NONMATCHING_PLANETS_MOD\": \"NONMATCHING_PLANETS_MOD\",\n    \"MECATOL_REX_SYS_MOD\": \"MECATOL_REX_SYS_MOD\",\n    \"LEGENDARY_PLANET_SYS_MOD\": \"LEGENDARY_PLANET_SYS_MOD\",\n    \"DISTANCE_MOD_BASE\": \"DISTANCE_MOD_BASE\",\n    \"DISTANCE_MOD_PLANET\": \"DISTANCE_MOD_PLANET\",\n    \"DISTANCE_MOD_EMPTY\": \"DISTANCE_MOD_EMPTY\",\n    \"DISTANCE_MOD_SUPERNOVA\": \"DISTANCE_MOD_SUPERNOVA\",\n    \"DISTANCE_MOD_ASTEROID_FIELD\": \"DISTANCE_MOD_ASTEROID_FIELD\",\n    \"DISTANCE_MOD_GRAVITY_RIFT\": \"DISTANCE_MOD_GRAVITY_RIFT\",\n    \"DISTANCE_MOD_EMPTY_WORMHOLE\": \"DISTANCE_MOD_EMPTY_WORMHOLE\",\n    \"DISTANCE_MOD_PLANET_WORMHOLE\": \"DISTANCE_MOD_PLANET_WORMHOLE\",\n    \"DISTANCE_MOD_NEBULA\": \"DISTANCE_MOD_NEBULA\",\n    \"DISTANCE_MOD_ADJACENT_TO_OPPONENT\": \"DISTANCE_MOD_ADJACENT_TO_OPPONENT\",\n    \"DISTANCE_MULTIPLIER\": \"DISTANCE_MULTIPLIER\",\n};\n\n\nexport class EvaluatorLine extends React.Component {\n    render() {\n        let null_box = null;\n        let nul_val = this.props.num_value===false;\n        if(this.props.hasNullBox) {\n            null_box = (<p className=\"control checkbox-holder\"><input\n                    id={this.props.id+\"-null-box\"}\n                    type=\"checkbox\"\n                    checked={nul_val}\n                    onChange={event => this.props.onNullChange(event.target.checked)}\n            /> Impassable&nbsp;</p>);\n        }\n        let num_value = this.props.num_value;\n        if(num_value===false) num_value = \"\";\n        return(\n            <div className=\"field line-container\">\n                <div>\n                    <label className=\"label\">{this.props.label}:</label>\n                </div>\n                <div>\n                    <div className=\"field all-parts\">\n                        <div className=\"both-controls\">\n                            <div className=\"field is-horizontal input-only\">\n                                <div className=\"m\">\n                                    {this.props.m}\n                                </div>\n                                <p className=\"control\">\n                                     <input\n                                        type=\"number\"\n                                        id={this.props.id+\"-num\"}\n                                        value={num_value}\n                                        className=\"input is-small\"\n                                        onChange={event => this.props.onInputChange(parseInt(event.target.value))}\n                                        disabled={nul_val}\n                                    />\n                                </p>\n                            </div>\n                            {null_box}\n                        </div>\n                        <div className=\"info-container\">\n                            <i className=\"fas fa-info-circle\"></i>\n                            <div className=\"input-info\">\n                                {this.props.helperText}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport class EvaluatorForm extends React.Component {\n    reportChange(which_aspect, value, distance=null) {\n        this.props.changeHandler(which_aspect, value, distance);\n    }\n\n    reportNullChange(which_aspect, value) {\n        if(value===false) {\n            this.reportChange(which_aspect, 0);\n        } else {\n            this.reportChange(which_aspect, false);\n        }\n    }\n\n    render() {\n        return(\n            <div className=\"block content evaluator-form\">\n                <div className=\"form-container\">\n                    <h3>Planet Evaluation</h3>\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Base Planet\"\n                        num_value={this.props.values.BASE_PLANET_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.BASE_PLANET_MOD, value)}\n                        helperText=\"Base value of each planet.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Resources\"\n                        num_value={this.props.values.RESOURCES_MULTIPLIER}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.RESOURCES_MULTIPLIER, value)}\n                        helperText=\"Number to multiply planet resource value by.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Influence\"\n                        num_value={this.props.values.INFLUENCE_MULTIPLIER}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.INFLUENCE_MULTIPLIER, value)}\n                        helperText=\"Number to multiply planet influence value by.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Tech\"\n                        num_value={this.props.values.TECH_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.TECH_MOD, value)}\n                        helperText=\"Number to add if the planet has a tech specialty.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Propulsion Tech\"\n                        num_value={this.props.values.TECH_PROPULSION_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.TECH_PROPULSION_MOD, value)}\n                        helperText=\"Number to add if the planet has a propulsion tech specialty.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Warfare Tech\"\n                        num_value={this.props.values.TECH_WARFARE_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.TECH_WARFARE_MOD, value)}\n                        helperText=\"Number to add if the planet has a warfare tech specialty.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Biotic Tech\"\n                        num_value={this.props.values.TECH_BIOTIC_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.TECH_BIOTIC_MOD, value)}\n                        helperText=\"Number to add if the planet has a biotic tech specialty.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Cybernetic Tech\"\n                        num_value={this.props.values.TECH_CYBERNETIC_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.TECH_CYBERNETIC_MOD, value)}\n                        helperText=\"Number to add if the planet has a cybernetic tech specialty.\"\n                    />\n                    <div className=\"field line-container\">\n                        <div>\n                            <label className=\"label\">Planet Eval Strategy:</label>\n                        </div>\n                        <div>\n                            <div className=\"field is-grouped\">\n                                <div className=\"field is-horizontal\">\n                                    <p className=\"control\">\n                                        <span className=\"select is-small\">\n                                            <select\n                                                value={this.props.values.PLANET_STRATEGY}\n                                                onChange={event => this.reportChange(\n                                                    EVAL_ASPECTS.PLANET_STRATEGY, event.target.value\n                                                )}\n                                            >\n                                                <option\n                                                    value={PLANET_EVAL_STRATEGIES.SUM}\n                                                    key={PLANET_EVAL_STRATEGIES.SUM}\n                                                >\n                                                    Sum\n                                                </option>\n                                                <option\n                                                    value={PLANET_EVAL_STRATEGIES.GREATEST}\n                                                    key={PLANET_EVAL_STRATEGIES.GREATEST}\n                                                >\n                                                    Greatest\n                                                </option>\n                                                <option\n                                                    value={PLANET_EVAL_STRATEGIES.GREATEST_PLUS_TECH}\n                                                    key={PLANET_EVAL_STRATEGIES.GREATEST_PLUS_TECH}\n                                                >\n                                                    Greatest+Tech\n                                                </option>\n                                            </select>\n                                        </span>\n                                    </p>\n                                </div>\n                                <div className=\"info-container\">\n                                    <i className=\"fas fa-info-circle\"></i>\n                                    <div className=\"input-info\">\n                                        How to combine resources, influence and tech values above.\n                                        <br /><br />Sum = R+I+T\n                                        <br /><br />Greatest = largest of R/I/T\n                                        <br /><br />Greatest+Tech = largest of R/I, +T\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Resources > 0\"\n                        num_value={this.props.values.NONZERO_RESOURCES_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.NONZERO_RESOURCES_MOD, value)}\n                        helperText=\"Number to add if planet resource value is greater than 0.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Influence > 0\"\n                        num_value={this.props.values.NONZERO_INFLUENCE_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.NONZERO_INFLUENCE_MOD, value)}\n                        helperText=\"Number to add if planet influence value is greater than 0.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Cultural Trait\"\n                        num_value={this.props.values.TRAIT_CULTURAL_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.TRAIT_CULTURAL_MOD, value)}\n                        helperText=\"Number to add if the planet has the cultural trait.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Hazardous Trait\"\n                        num_value={this.props.values.TRAIT_HAZARDOUS_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.TRAIT_HAZARDOUS_MOD, value)}\n                        helperText=\"Number to add if the planet has the hazardous trait.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Industrial Trait\"\n                        num_value={this.props.values.TRAIT_INDUSTRIAL_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.TRAIT_INDUSTRIAL_MOD, value)}\n                        helperText=\"Number to add if the planet has the industrial trait.\"\n                    />\n                    <h3>System Evaluation</h3>\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Single Planet System\"\n                        num_value={this.props.values.SINGLE_PLANET_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.SINGLE_PLANET_MOD, value)}\n                        helperText=\"Number to add if the system has exactly 1 planet.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Multi-planet System\"\n                        num_value={this.props.values.MULTI_PLANET_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.MULTI_PLANET_MOD, value)}\n                        helperText=\"Number to add if the system has more than 1 planet.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Matching Planets System\"\n                        num_value={this.props.values.MATCHING_PLANETS_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.MATCHING_PLANETS_MOD, value)}\n                        helperText=\"Number to add if a system has 2 planets with the same trait.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Non-Matching Planets System\"\n                        num_value={this.props.values.NONMATCHING_PLANETS_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.NONMATCHING_PLANETS_MOD, value)}\n                        helperText=\"Number to add if a system has 2 planets with different traits.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Mecatol Rex System\"\n                        num_value={this.props.values.MECATOL_REX_SYS_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.MECATOL_REX_SYS_MOD, value)}\n                        helperText=\"Number to add if the system contains Mecatol Rex.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Legendary Planet System\"\n                        num_value={this.props.values.LEGENDARY_PLANET_SYS_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.LEGENDARY_PLANET_SYS_MOD, value)}\n                        helperText=\"Number to add if the system contains a Legendary Planet.\"\n                    />\n                    <h3>Home to System Distance Evaluation</h3>\n                    <h4>Distance Measurement</h4>\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Distance Base\"\n                        num_value={this.props.values.DISTANCE_MOD_BASE}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MOD_BASE, value)}\n                        helperText=\"Base distance unit for every space moved through.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Moving Through Planet\"\n                        num_value={this.props.values.DISTANCE_MOD_PLANET}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MOD_PLANET, value)}\n                        helperText=\"Distance modifier for systems with 1 or more planets.\"\n                        hasNullBox\n                        onNullChange={value => this.reportNullChange(EVAL_ASPECTS.DISTANCE_MOD_PLANET, value)}\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Moving Through Empty Space\"\n                        num_value={this.props.values.DISTANCE_MOD_EMPTY}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MOD_EMPTY, value)}\n                        helperText=\"Distance modifier for empty space systems.\"\n                        hasNullBox\n                        onNullChange={value => this.reportNullChange(EVAL_ASPECTS.DISTANCE_MOD_EMPTY, value)}\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Moving Through Supernova\"\n                        num_value={this.props.values.DISTANCE_MOD_SUPERNOVA}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MOD_SUPERNOVA, value)}\n                        helperText=\"Distance modifier for supernova systems.\"\n                        hasNullBox\n                        onNullChange={value => this.reportNullChange(EVAL_ASPECTS.DISTANCE_MOD_SUPERNOVA, value)}\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Moving Through Asteroid\"\n                        num_value={this.props.values.DISTANCE_MOD_ASTEROID_FIELD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MOD_ASTEROID_FIELD, value)}\n                        helperText=\"Distance modifier for asteroid field systems.\"\n                        hasNullBox\n                        onNullChange={value => this.reportNullChange(EVAL_ASPECTS.DISTANCE_MOD_ASTEROID_FIELD, value)}\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Moving Through Gravity Rift\"\n                        num_value={this.props.values.DISTANCE_MOD_GRAVITY_RIFT}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MOD_GRAVITY_RIFT, value)}\n                        helperText=\"Distance modifier for gravity rift systems.\"\n                        hasNullBox\n                        onNullChange={value => this.reportNullChange(EVAL_ASPECTS.DISTANCE_MOD_GRAVITY_RIFT, value)}\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Moving Through Wormholes Without Planets\"\n                        num_value={this.props.values.DISTANCE_MOD_EMPTY_WORMHOLE}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MOD_EMPTY_WORMHOLE, value)}\n                        helperText=\"Distance modifier for wormhole systems without planets.\"\n                        hasNullBox\n                        onNullChange={value => this.reportNullChange(EVAL_ASPECTS.DISTANCE_MOD_EMPTY_WORMHOLE, value)}\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Moving Through Wormholes With a Planet\"\n                        num_value={this.props.values.DISTANCE_MOD_PLANET_WORMHOLE}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MOD_PLANET_WORMHOLE, value)}\n                        helperText=\"Distance modifier for wormhole systems with a planet.\"\n                        hasNullBox\n                        onNullChange={value => this.reportNullChange(EVAL_ASPECTS.DISTANCE_MOD_PLANET_WORMHOLE, value)}\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Moving Through Nebula\"\n                        num_value={this.props.values.DISTANCE_MOD_NEBULA}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MOD_NEBULA, value)}\n                        helperText=\"Distance modifier for nebula systems.\"\n                        hasNullBox\n                        onNullChange={value => this.reportNullChange(EVAL_ASPECTS.DISTANCE_MOD_NEBULA, value)}\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Moving Through Opponent Adj Sys\"\n                        num_value={this.props.values.DISTANCE_MOD_ADJACENT_TO_OPPONENT}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MOD_ADJACENT_TO_OPPONENT, value)}\n                        helperText=\"Distance modifier for systems adjacent to your opponents' home systems.\"\n                        hasNullBox\n                        onNullChange={value => this.reportNullChange(EVAL_ASPECTS.DISTANCE_MOD_ADJACENT_TO_OPPONENT, value)}\n                    />\n                    <h4>System Value Multipliers Based on Modified Distance</h4>\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Modified Distance of <1\"\n                        num_value={this.props.values.DISTANCE_MULTIPLIER[0]}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MULTIPLIER, value, 0)}\n                        helperText=\"Number to multiply the system's value by when the modified distance to the home planet is 0 or less.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Modified Distance of 1\"\n                        num_value={this.props.values.DISTANCE_MULTIPLIER[1]}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MULTIPLIER, value, 1)}\n                        helperText=\"Number to multiply the system's value by when the modified distance to the home planet is 1.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Modified Distance of 2\"\n                        num_value={this.props.values.DISTANCE_MULTIPLIER[2]}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MULTIPLIER, value, 2)}\n                        helperText=\"Number to multiply the system's value by when the modified distance to the home planet is 2.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Modified Distance of 3\"\n                        num_value={this.props.values.DISTANCE_MULTIPLIER[3]}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MULTIPLIER, value, 3)}\n                        helperText=\"Number to multiply the system's value by when the modified distance to the home planet is 3.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Modified Distance of 4\"\n                        num_value={this.props.values.DISTANCE_MULTIPLIER[4]}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MULTIPLIER, value, 4)}\n                        helperText=\"Number to multiply the system's value by when the modified distance to the home planet is 4.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Modified Distance of 5\"\n                        num_value={this.props.values.DISTANCE_MULTIPLIER[5]}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MULTIPLIER, value, 5)}\n                        helperText=\"Number to multiply the system's value by when the modified distance to the home planet is 5.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Modified Distance of 6\"\n                        num_value={this.props.values.DISTANCE_MULTIPLIER[6]}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MULTIPLIER, value, 6)}\n                        helperText=\"Number to multiply the system's value by when the modified distance to the home planet is 6.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Modified Distance of 7\"\n                        num_value={this.props.values.DISTANCE_MULTIPLIER[7]}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MULTIPLIER, value, 7)}\n                        helperText=\"Number to multiply the system's value by when the modified distance to the home planet is 7.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Modified Distance of 8\"\n                        num_value={this.props.values.DISTANCE_MULTIPLIER[8]}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MULTIPLIER, value, 8)}\n                        helperText=\"Number to multiply the system's value by when the modified distance to the home planet is 8.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Modified Distance of 9\"\n                        num_value={this.props.values.DISTANCE_MULTIPLIER[9]}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MULTIPLIER, value, 9)}\n                        helperText=\"Number to multiply the system's value by when the modified distance to the home planet is 9.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Modified Distance of 10+\"\n                        num_value={this.props.values.DISTANCE_MULTIPLIER[10]}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MULTIPLIER, value, 10)}\n                        helperText=\"Number to multiply the system's value by when the modified distance to the home planet is greater than 9.\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport $ from 'jquery';\n\nimport {\n    JSONDownloadButton,\n    JSONUploadButton,\n} from \"../download-helpers\";\nimport {BaseEditor} from \"./base-editor\";\nimport {EvaluatorForm, EVAL_ASPECTS} from '../evaluator-components';\nimport default_evaluators from '../data/default_evaluators.json';\nimport ls from \"local-storage\";\n\nwindow.jQuery = $;\n\nexport class EvaluationEditor extends BaseEditor {\n    constructor(props) {\n        super(props);\n        this.default_evaluators = default_evaluators;\n        this.state.values = Object.assign({}, this.default_evaluators[0].data);\n        if(this.props.state_to_import) {\n            let matching_options = this.getOptions().filter(option => option.index === this.props.state_to_import.selected_item);\n            if (matching_options.length > 0) {\n                this.state = this.props.state_to_import;\n            }\n        }\n    }\n\n    changeHandler(which_aspect, value, distance) {\n        let new_values = Object.assign(this.state.values);\n        if(which_aspect === EVAL_ASPECTS.DISTANCE_MULTIPLIER) {\n            new_values[which_aspect][distance] = value;\n        } else {\n            new_values[which_aspect] = value;\n        }\n        this.setState({\"values\": new_values});\n    }\n\n    setValues(new_values) {\n        this.setState({\n            \"values\": Object.assign({}, new_values),\n        });\n    }\n\n    isSelectNew(selected_item=null) {\n        if(selected_item !== null) return selected_item===\"new\";\n        return this.getSelectValue() === \"new\";\n    }\n\n    getNewStringValue() {\n        return \"new\";\n    }\n\n    handleSelectChange() {\n        let new_value = this.getSelectValue();\n        if(new_value === \"new\") {\n            this.setValuesFull(Object.assign({}, this.default_evaluators[0]));\n        } else {\n            let valIndex = parseInt(new_value);\n            this.setValuesFull(Object.assign({}, this.state.saved_data[valIndex]), new_value);\n        }\n    }\n\n    setValuesFull(data, selected_item=\"new\", new_eval=null) {\n        if(new_eval===null) new_eval = data.data;\n        let loadedTitle = data.title;\n        let new_message = this.props.subject+\" '\"+loadedTitle+\"' displayed.\";\n        this.setValues(new_eval);\n        this.setState({\n            \"message\": new_message,\n            \"input_title\": loadedTitle,\n            \"selected_item\": selected_item.toString(),\n        });\n    }\n\n    getCurrentLayoutJSON() {\n        let l_title = \"Untitled Evaluator\";\n        if($('#layout-title').val() !== '') {\n            l_title = $('#layout-title').val();\n        }\n        return {\n            \"title\": l_title,\n            \"data\": Object.assign(this.state.values),\n        };\n    }\n\n    deleteAll() {\n        ls.remove(this.props.storage_key);\n        this.setValuesFull(Object.assign({}, this.default_evaluators[0]));\n        this.setState({\n            \"saved_data\": ls.get(this.props.storage_key) || [],\n            \"selected_item\": this.getNewStringValue(),\n            \"input_title\": \"\",\n            \"message\": \"All saved \"+this.props.subject_plural+\" have been deleted.\",\n        });\n    }\n\n    deleteCurrent() {\n        let currentIndex = this.getSelectValue();\n        let saved_data = Object.assign([], this.state.saved_data);\n        let toDel = saved_data.splice(parseInt(currentIndex), 1)[0];\n        ls.set(this.props.storage_key, saved_data);\n        this.setValuesFull(Object.assign(this.default_evaluators[0]));\n        this.setState({\n            \"input_title\": \"\",\n            \"selected_item\": this.getNewStringValue(),\n            \"message\": this.props.subject+\" '\"+toDel.title+\"' deleted.\",\n            \"saved_data\": ls.get(this.props.storage_key) || [],\n        });\n    }\n\n    loadDefault(index) {\n        let toLoad = this.default_evaluators[index];\n        let new_values = toLoad.data;\n        let loadedTitle = toLoad.title;\n        let new_message = \"Default evaluator '\"+loadedTitle+\"' displayed.\";\n        this.setValues(new_values);\n        this.setState({\n            \"message\": new_message,\n            \"input_title\": loadedTitle,\n            \"selected_item\": this.getNewStringValue(),\n        });\n    }\n\n    addLayoutsFromJSON(data) {\n        if(data.length>0) {\n            let saved_data = Object.assign([], this.state.saved_data);\n            for(let dataToSave of data) {\n                saved_data.push(dataToSave);\n            }\n            ls.set(this.props.storage_key, saved_data);\n            this.setValuesFull(saved_data[saved_data.length-1], saved_data.length-1);\n            this.setState({\n                \"saved_data\": ls.get(this.props.storage_key) || [],\n                \"message\": \"Evaluators loaded.\",\n                \"selected_item\": saved_data.length-1,\n                \"input_title\": saved_data[saved_data.length-1].title,\n            });\n        } else {\n            this.setState({\"message\": \"There were no \"+this.props.subject_plural+\" to load.\"})\n        }\n    }\n\n    getOptions() {\n        let options = [{\n            \"index\": \"new\",\n            \"title\": \"New Evaluator\",\n        }];\n        for(let [index, one_saved] of this.state.saved_data.entries()) {\n            options.push({\n                \"index\": index.toString(),\n                \"title\": one_saved.title,\n            });\n        }\n        return options;\n    }\n\n    render() {\n        let options = [];\n        for(let opt of this.getOptions()) {\n            options.push(\n                <option value={opt.index} key={opt.index}>{opt.title}</option>\n            );\n        }\n        let defaults = [];\n        for(let [index, one_default] of this.default_evaluators.entries()) {\n            defaults.push(\n                <p className=\"control\" key={index}>\n                    <button\n                        className=\"button is-small is-link\"\n                        onClick={()=>this.loadDefault(index)}\n                        key={\"default_layout_\"+index}\n                    >\n                        {one_default.title}\n                    </button>\n                </p>\n            )\n        }\n\n        return(\n            <div className=\"block\">\n                <h2 className=\"title is-size-4\">Evaluator Editor</h2>\n                <div className=\"block map-lab-control-panel\">\n                    <div className=\"field is-horizontal\">\n                        <div className=\"field-label\">\n                            <label className=\"label\">Default Evaluators:</label>\n                        </div>\n                        <div className=\"field-body\">\n                            <div className=\"field is-grouped is-grouped-multiline\">\n                                {defaults}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"field is-horizontal\">\n                        <div className=\"field-label\">\n                            <label className=\"label\">Saved Evaluators:</label>\n                        </div>\n                        <div className=\"field-body\">\n                            <div className=\"field is-grouped is-grouped-multiline\">\n                                <p className=\"control\">\n                                    <span className=\"select is-small\">\n                                        <select\n                                            id=\"layout-select\"\n                                            value={this.state.selected_item}\n                                            onChange={()=>this.handleSelectChange()}\n                                        >\n                                            {options}\n                                        </select>\n                                    </span>\n                                </p>\n                                <p className=\"control\">\n                                    <JSONDownloadButton\n                                        title=\"Download All\"\n                                        getDownloadInfo={()=>this.getAllLayoutJSONFileInfo()}\n                                        className=\"button is-small\"\n                                    />\n                                </p>\n                                <p className=\"control\">\n                                    <button onClick={()=>this.deleteAll()} className=\"button is-small\">\n                                        Delete All\n                                    </button>\n                                </p>\n                                <p className=\"control\">\n                                    <JSONUploadButton\n                                        id=\"layout-json-upload\"\n                                        title=\"Upload\"\n                                        handleJSON={(data)=>this.addLayoutsFromJSON(data)}\n                                        className=\"button is-small\"\n                                    />\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"field is-horizontal\">\n                        <div className=\"field-label\">\n                            <label className=\"label\">Evaluator Title:</label>\n                        </div>\n                        <div className=\"field-body\">\n                            <div className=\"field is-grouped is-grouped-multiline\">\n                                <p className=\"control\">\n                                    <input\n                                        type=\"text\"\n                                        id=\"layout-title\"\n                                        value={this.state.input_title}\n                                        className=\"input is-small\"\n                                        onChange={function() {\n                                            this.setState(\n                                                {\n                                                    \"input_title\": document.getElementById(\"layout-title\").value,\n                                                    \"message\": \"\"\n                                                }\n                                            );\n                                        }.bind(this)}\n                                    />\n                                </p>\n                                <p className=\"control\">\n                                    <button className=\"button is-small\" onClick={()=>this.saveCurrent()}>Save</button>\n                                </p>\n                                <p className=\"control\">\n                                    <button className=\"button is-small\" onClick={()=>this.handleSelectChange()}>Reset</button>\n                                </p>\n                                <p className=\"control\">\n                                    <button\n                                        onClick={()=>this.deleteCurrent()}\n                                        disabled={this.isSelectNew(this.state.selected_item)}\n                                        className=\"button is-small\"\n                                    >Delete</button>\n                                </p>\n                                <p className=\"control\">\n                                    <JSONDownloadButton\n                                        title=\"Download\"\n                                        getDownloadInfo={()=>this.getCurrentLayoutJSONFileInfo()}\n                                        className=\"button is-small\"\n                                    />\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    {this.getMessageHtml()}\n\n                </div>\n                <EvaluatorForm\n                    values={this.state.values}\n                    changeHandler={(which_aspect, value, distance)=>this.changeHandler(which_aspect, value, distance)}\n                />\n            </div>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport \"./styles/map-lab.scss\";\nimport {MapEditor} from \"./editors/map-editor\";\nimport {LayoutEditor} from './editors/layout-editor';\nimport {EvaluationEditor} from \"./editors/eval-editor\";\n\nimport $ from \"jquery\";\nwindow.jQuery = $;\n\nconst SCREENS = {\n    \"MAP_EDITOR\": 1,\n    \"LAYOUT_EDITOR\": 2,\n    \"SYSTEM_EVALUATOR\": 3,\n    \"INSTRUCTIONS\": 4,\n};\n\nfunction toggleMenu() {\n    $(\".navbar-burger\").toggleClass(\"is-active\");\n    $(\".navbar-menu\").toggleClass(\"is-active\");\n}\n\n\nclass MapLabNavigator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"active_screen\": SCREENS.MAP_EDITOR,\n        };\n        this.map_state = null;\n        this.layout_state = null;\n        this.eval_state = null;\n    }\n\n    storeState(which_screen, state) {\n        switch(which_screen) {\n            case SCREENS.SYSTEM_EVALUATOR:\n                this.eval_state = state;\n                break;\n            case SCREENS.LAYOUT_EDITOR:\n                this.layout_state = state;\n                break;\n            case SCREENS.MAP_EDITOR:\n                this.map_state = state;\n                console.log(state);\n                break;\n            default:\n                break;\n        }\n    }\n\n    changeScreen(new_screen) {\n        this.setState({\n            \"active_screen\": new_screen,\n        });\n    }\n\n    render() {\n        let screen_return = null;\n        switch(this.state.active_screen) {\n            case SCREENS.MAP_EDITOR:\n                screen_return = (\n                    <MapEditor\n                        storage_key=\"maps\"\n                        subject=\"Map\"\n                        subject_plural=\"Maps\"\n                        layout_storage_key=\"layouts\"\n                        eval_storage_key=\"evaluators\"\n                        state_to_import={this.map_state}\n                        sendStateBeforeDeath={(state_to_store)=>this.storeState(SCREENS.MAP_EDITOR, state_to_store)}\n                    />\n                );\n                break;\n            case SCREENS.LAYOUT_EDITOR:\n                screen_return = (\n                    <LayoutEditor\n                        storage_key=\"layouts\"\n                        subject=\"Layout\"\n                        subject_plural=\"Layouts\"\n                        state_to_import={this.layout_state}\n                        sendStateBeforeDeath={(state_to_store)=>this.storeState(SCREENS.LAYOUT_EDITOR, state_to_store)}\n                    />\n                );\n                break;\n            case SCREENS.SYSTEM_EVALUATOR:\n                screen_return = (\n                    <EvaluationEditor\n                        storage_key=\"evaluators\"\n                        subject=\"Evaluator\"\n                        subject_plural=\"Evaluators\"\n                        state_to_import={this.eval_state}\n                        sendStateBeforeDeath={(state_to_store)=>this.storeState(SCREENS.SYSTEM_EVALUATOR, state_to_store)}\n                    />\n                );\n                break;\n            case SCREENS.INSTRUCTIONS:\n                screen_return = (\n                    <div className=\"block content\">\n                        <h2>Getting Started</h2>\n                        <h3>Basic Map Generation</h3>\n                        <ol>\n                            <li>Go to the Map Editor screen (the default screen).</li>\n                            <li>If you don't want the default 6-player map, choose another \"new from\" option under\n                                \"Saved/Defaults\"</li>\n                            <li>Scroll down and click \"Auto-Complete Map.\"</li>\n                            <li>Click the \"Improve Balance\" button a few times to make the map more fair according to the\n                                current Evaluator algorithm. The number in each Home System represents the strength of that\n                                home system's position based on the quality of and distance from systems on the map.</li>\n                            <li>Change \"Joebrew\" to another evaluator to get a different view on the\n                                strength of the home system positions.</li>\n                            <li>Drag and drop systems to switch them with each other as you wish (On mobile, click a\n                                system to send it back to the system bank, or click a space to put the currently selected\n                                system bank system in that space.)</li>\n                            <li>Name your map via \"Map Title\" and click \"Save\" at the top. Saves in your browser only.\n                                Can be loaded in the future from the \"Saved/Defaults\" dropdown.</li>\n                            <li>Copy the Map String or download the json file to share.</li>\n                        </ol>\n                        <h3>Building a Map From Scratch</h3>\n                        <ol>\n                            <li>Choose the layout you want to build from the \"Saved/Defaults\" dropdown.</li>\n                            <li>Scroll down to the System Bank and select the first system you want to place. (Suggestion:\n                                Start with the wormholes.) The system appears under the dropdown.</li>\n                            <li>Drag the system to the space where you want it. (On mobile, just touch the space.)</li>\n                            <li>Continue the above steps until you've placed all the systems you care about.</li>\n                            <li>Choose the desired blue/red target ratio from the dropdown under Auto-Complete.</li>\n                            <li>Click Auto-Complete to fill out the rest of the map.</li>\n                            <li>Change the \"Simple Slice\" dropdown to another evaluator algorithm for different perspectives\n                                on the strength of each home space's position.</li>\n                            <li>Use the \"Lock\" checkboxes to fix certain spaces in place, before clicking \"Improve Balance\"\n                                a few times to improve the overall system allocation.</li>\n                            <li>Don't forget to save your map at the top early and often.</li>\n                        </ol>\n                        <h3>Creating New Layouts</h3>\n                        <ol>\n                            <li>Choose \"Layout Editor\" at the top.</li>\n                            <li>Click spaces to cycle through \"open\" (open for systems), home system, closed, and\n                                Mecatol Rex.</li>\n                            <li>Use the checkboxes under \"Click Cycle\" to also include things like warp (hyperlane)\n                                hexes, anomalies, and/or wormholes.</li>\n                            <li>Be sure to name and save your layout. Once saved, as long as it doesn't have nonsensical\n                                warp hexes, it will appear in the map editor under its own \"New from...\" option.</li>\n                        </ol>\n                        <h3>Customize an Evaluator</h3>\n                        <ol>\n                            <li>Use the \"System Evaluator\" menu item at the top to make your own custom evaluations of\n                                planets, systems, and home system positions.</li>\n                            <li>The variables under \"Planet Evaluation\" define how much a planet is worth.</li>\n                            <li>The variables under \"System Evaluation\" define how much a system is worth by taken\n                                their planet values and adding these modifiers.</li>\n                            <li>The variables under \"Home to System Distance Evaluation\" define how far (in an abstracted\n                                sense) a home system is to each system, based on the kinds of hexes it has to go through\n                                to get there. \"Distance Base\" is added for every hex that must be moved into. The other modifiers,\n                                if set ot 1 or more, will increase that base hex number for those types of hexes. (Example:\n                                The path to a 2-planet system is through empty space, then through a nebula. In the evaluator, Base Hex\n                                is set to 2, empty space is set to 0, and nebula is set to 1. Therefore, it is 2 distance\n                                to move into the empty space, 3 to move into the nebula, and 2 to move into the 2-planet system.\n                                Therefore, the total modified distance is 7, even though the physical distance is only\n                                three hexes.)</li>\n                            <li>The variables under \"System Value Multipliers Based on Distance\" define what to multiply\n                                a system's worth by, based on the modified distance it is from a home system. Any modified\n                                distance above 10 is not eligible to hold value to the home system.</li>\n                            <li>Don't forget to save your evaluator. Then, it will show up uner the \"Improve Balance\" dropdown\n                                on the Map Editor screen.</li>\n                        </ol>\n                    </div>\n                );\n                break;\n            default:\n                break;\n        }\n\n\n        return(\n            <div className=\"block map-lab\">\n                <nav className=\"navbar is-primary\">\n                    <div className=\"navbar-brand\">\n                        <h1 className=\"title is-3 is-marginless\">TI4 Map Lab</h1>\n                        {/*eslint-disable-next-line*/}\n                        <a\n                            role=\"button\"\n                            className=\"navbar-burger is-\"\n                            aria-label=\"menu\"\n                            aria-expanded=\"false\"\n                            onClick={()=>toggleMenu()}\n                        >\n                            <span aria-hidden=\"true\"></span>\n                            <span aria-hidden=\"true\"></span>\n                            <span aria-hidden=\"true\"></span>\n                        </a>\n                    </div>\n                    <div className=\"navbar-menu\">\n                        <div className=\"navbar-start\">\n                        </div>\n                            <div className=\"navbar-end\">\n                                {/*eslint-disable-next-line*/}\n                                <a role=\"button\"\n                                    disabled={this.state.active_screen===SCREENS.INSTRUCTIONS}\n                                    onClick={()=>this.changeScreen(SCREENS.INSTRUCTIONS)}\n                                    className=\"navbar-item\"\n                                >\n                                    Instructions\n                                </a>\n                                {/*eslint-disable-next-line*/}\n                                <a role=\"button\"\n                                    disabled={this.state.active_screen===SCREENS.MAP_EDITOR}\n                                    onClick={()=>this.changeScreen(SCREENS.MAP_EDITOR)}\n                                    className=\"navbar-item\"\n                                >\n                                    Map Editor\n                                </a>\n                                {/*eslint-disable-next-line*/}\n                                <a role=\"button\"\n                                    disabled={this.state.active_screen===SCREENS.LAYOUT_EDITOR}\n                                    onClick={()=>this.changeScreen(SCREENS.LAYOUT_EDITOR)}\n                                    className=\"navbar-item\"\n                                >\n                                    Layout Editor\n                                </a>\n                                {/*eslint-disable-next-line*/}\n                                <a role=\"button\"\n                                    disabled={this.state.active_screen===SCREENS.SYSTEM_EVALUATOR}\n                                    onClick={()=>this.changeScreen(SCREENS.SYSTEM_EVALUATOR)}\n                                    className=\"navbar-item\"\n                                >\n                                    System Evaluator\n                                </a>\n                        </div>\n                    </div>\n                </nav>\n                {screen_return}\n            </div>\n        );\n    }\n\n}\n\nReactDOM.render(\n    <MapLabNavigator />,\n    document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}